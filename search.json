[{"path":[]},{"path":"https://ggforce.data-imaginist.com/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ggforce.data-imaginist.com/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ggforce.data-imaginist.com/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ggforce.data-imaginist.com/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ggforce.data-imaginist.com/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ggforce.data-imaginist.com/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ggforce.data-imaginist.com/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ggforce.data-imaginist.com/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ggforce.data-imaginist.com/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ggforce.data-imaginist.com/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ggforce.data-imaginist.com/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://ggforce.data-imaginist.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Thomas Lin Pedersen Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ggforce.data-imaginist.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Lin Pedersen. Maintainer, author. RStudio. Copyright holder.","code":""},{"path":"https://ggforce.data-imaginist.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pedersen T (2025). ggforce: Accelerating 'ggplot2'. R package version 0.5.0.9000, https://ggforce.data-imaginist.com.","code":"@Manual{,   title = {ggforce: Accelerating 'ggplot2'},   author = {Thomas Lin Pedersen},   year = {2025},   note = {R package version 0.5.0.9000},   url = {https://ggforce.data-imaginist.com}, }"},{"path":"https://ggforce.data-imaginist.com/index.html","id":"ggforce-","dir":"","previous_headings":"","what":"Accelerating ggplot2","title":"Accelerating ggplot2","text":"Accelerating ggplot2 ggforce package aimed providing missing functionality ggplot2 extension system introduced ggplot2 v2.0.0. Broadly speaking ggplot2 aimed primarily explorative data visualization order investigate data hand, less providing utilities composing custom plots la D3.js. ggforce mainly attempt address “shortcomings” (design choices might better description). goal provide repository geoms, stats, etc. well documented implemented official ones found ggplot2.","code":""},{"path":"https://ggforce.data-imaginist.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Accelerating ggplot2","text":"can install released version ggforce CRAN : development version GitHub :","code":"install.packages(\"ggforce\") # install.packages(\"devtools\") devtools::install_github(\"thomasp85/ggforce\")"},{"path":"https://ggforce.data-imaginist.com/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Accelerating ggplot2","text":"ggforce design collection features commonality tie ggplot2 API. overview features get long README. package website every feature described justified examples plots. plot README visualization package though, without ado:","code":"library(ggforce) #> Loading required package: ggplot2 ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +   geom_point() +   facet_zoom(x = Species == \"versicolor\")"},{"path":"https://ggforce.data-imaginist.com/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Accelerating ggplot2","text":"Please note ‘ggforce’ project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/facet_grid_paginate.html","id":null,"dir":"Reference","previous_headings":"","what":"Split facet_grid over multiple plots — facet_grid_paginate","title":"Split facet_grid over multiple plots — facet_grid_paginate","text":"extension ggplot2::facet_grid() allow split facetted plot multiple pages. define number rows columns per page well page number plot, function automatically plot correct panels. Usually put loop render pages one one.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/facet_grid_paginate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split facet_grid over multiple plots — facet_grid_paginate","text":"","code":"facet_grid_paginate(   facets,   margins = FALSE,   scales = \"fixed\",   space = \"fixed\",   shrink = TRUE,   labeller = \"label_value\",   as.table = TRUE,   switch = NULL,   drop = TRUE,   ncol = NULL,   nrow = NULL,   page = 1,   byrow = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/facet_grid_paginate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split facet_grid over multiple plots — facet_grid_paginate","text":"facets Please use rows cols instead. margins Either logical value character vector. Margins additional facets contain data possible values faceting variables. FALSE, additional facets included (default). TRUE, margins included faceting variables. specified character vector, names variables margins created. scales scales shared across facets (default, \"fixed\"), vary across rows (\"free_x\"), columns (\"free_y\"), rows columns (\"free\")? space \"fixed\", default, panels size. \"free_y\" height proportional length y scale; \"free_x\" width proportional length x scale; \"free\" height width vary.  setting effect unless appropriate scales also vary. shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary. labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one vars(cyl, ). output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). can use different labeling functions different kind labels, example use label_parsed() formatting facet labels. label_value() used default, check details pointers options. .table TRUE, default, facets laid like table highest values bottom-right. FALSE, facets laid like plot highest value top-right. switch default, labels displayed top right plot. \"x\", top labels displayed bottom. \"y\", right-hand side labels displayed left. Can also set \"\". drop TRUE, default, factor levels used data automatically dropped. FALSE, factor levels shown, regardless whether appear data. ncol Number columns per page nrow Number rows per page page page draw byrow pages created row-wise column wise","code":""},{"path":"https://ggforce.data-imaginist.com/reference/facet_grid_paginate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Split facet_grid over multiple plots — facet_grid_paginate","text":"either ncol nrow NULL function fall back standard facet_grid functionality.","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/facet_grid_paginate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split facet_grid over multiple plots — facet_grid_paginate","text":"","code":"# Draw a small section of the grid ggplot(diamonds) +   geom_point(aes(carat, price), alpha = 0.1) +   facet_grid_paginate(color ~ cut:clarity, ncol = 3, nrow = 3, page = 4)"},{"path":"https://ggforce.data-imaginist.com/reference/facet_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Facet by different data columns — facet_matrix","title":"Facet by different data columns — facet_matrix","text":"facet_matrix() facet allows put different data columns different rows columns grid panels. data columns present rows columns grid, used together ggplot2::geom_point() also known scatterplot matrix, geoms used sometimes referred pairs plot. facet_matrix flexible types simply subset capabilities, combination data columns can plotted using type geom. Layers use .panel_x .panel_y placeholders map aesthetics , order access row column data.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/facet_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facet by different data columns — facet_matrix","text":"","code":"facet_matrix(   rows,   cols = rows,   shrink = TRUE,   switch = NULL,   labeller = \"label_value\",   flip.rows = FALSE,   alternate.axes = FALSE,   layer.lower = NULL,   layer.diag = NULL,   layer.upper = NULL,   layer.continuous = NULL,   layer.discrete = NULL,   layer.mixed = NULL,   grid.y.diag = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/facet_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facet by different data columns — facet_matrix","text":"rows, cols specification data columns put rows columns facet grid. specified using ggplot2::vars() function wherein can use standard tidyselect syntax known e.g. dplyr::select(). data values made available different layers .panel_x .panel_y variables. shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary. switch default, labels displayed top right plot. \"x\", top labels displayed bottom. \"y\", right-hand side labels displayed left. Can also set \"\". labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one vars(cyl, ). output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). can use different labeling functions different kind labels, example use label_parsed() formatting facet labels. label_value() used default, check details pointers options. flip.rows order rows reversed , rows columns equal, diagonal goes bottom-left top-right instead top-left bottom-right. alternate.axes axes drawn alternating positions. layer.lower, layer.diag, layer.upper Specification layer appear. default (NULL) allow layer specified directly appear position. Putting e.g. layer.diag = 2 make second layer appear diagonal well remove layer position NULL. Using TRUE put layers position, using FALSE conversely remove layers. settings effect grid symmetric. layer.continuous, layer.discrete, layer.mixed , instead referencing panel positions references combination position scales panel. Continuous panels continuous x y axis, discrete panels discrete x y axis, mixed panels one . Unlike position based specifications also effect non-symmetric grids. grid.y.diag y grid removed diagonal? certain situations diagonal used plot distribution column data thus use y-scale. Removing y gridlines can indicate .","code":""},{"path":"https://ggforce.data-imaginist.com/reference/facet_matrix.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Facet by different data columns — facet_matrix","text":"Due special nature faceting slightly breaks ggplot2 API, positional scale settings ignored. row column grid potentially different scale types currently possible multiple different scale specifications plot object.","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/facet_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facet by different data columns — facet_matrix","text":"","code":"# Standard use: ggplot(mpg) +   geom_point(aes(x = .panel_x, y = .panel_y)) +   facet_matrix(vars(displ, cty, hwy))   # Switch the diagonal, alternate the axes and style strips as axis labels ggplot(mpg) +   geom_point(aes(x = .panel_x, y = .panel_y)) +   facet_matrix(vars(displ, cty, hwy), flip.rows = TRUE,                alternate.axes = TRUE, switch = 'both') +   theme(strip.background = element_blank(),         strip.placement = 'outside',         strip.text = element_text(size = 12))   # Mix discrete and continuous columns. Use geom_autopoint for scale-based jitter ggplot(mpg) +   geom_autopoint() +   facet_matrix(vars(drv:fl))   # Have a special diagonal layer ggplot(mpg) +   geom_autopoint() +   geom_autodensity() +   facet_matrix(vars(drv:fl), layer.diag = 2)   # \\donttest{ # Show continuous panels in upper triangle as contours and rest as binned ggplot(mpg) +   geom_autopoint() +   geom_autodensity() +   geom_density2d(aes(x = .panel_x, y = .panel_y)) +   geom_bin2d(aes(x = .panel_x, y = .panel_y)) +   facet_matrix(vars(drv:fl), layer.lower = 1, layer.diag = 2,                layer.continuous = -4, layer.discrete = -3, layer.mixed = -3) #> `stat_bin2d()` using `bins = 30`. Pick better value `binwidth`.  # }  # Make asymmetric grid ggplot(mpg) +   geom_boxplot(aes(x = .panel_x, y = .panel_y, group = .panel_x)) +   facet_matrix(rows = vars(cty, hwy), cols = vars(drv, fl))"},{"path":"https://ggforce.data-imaginist.com/reference/facet_row.html","id":null,"dir":"Reference","previous_headings":"","what":"One-dimensional facets — facet_row","title":"One-dimensional facets — facet_row","text":"facets one-dimensional versions ggplot2::facet_wrap(), arranging panels either single row single column. restriction makes possible support space argument seen ggplot2::facet_grid() , set \"free\" allow panels sized based relative range scales. Another way thinking one-dimensional versions ggplot2::facet_grid() (ie. . ~ {var} {var} ~ .), ability position strip either side panel. However look best world just need one dimension.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/facet_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-dimensional facets — facet_row","text":"","code":"facet_row(   facets,   scales = \"fixed\",   space = \"fixed\",   shrink = TRUE,   labeller = \"label_value\",   drop = TRUE,   strip.position = \"top\" )  facet_col(   facets,   scales = \"fixed\",   space = \"fixed\",   shrink = TRUE,   labeller = \"label_value\",   drop = TRUE,   strip.position = \"top\" )"},{"path":"https://ggforce.data-imaginist.com/reference/facet_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-dimensional facets — facet_row","text":"facets set variables expressions quoted vars() defining faceting groups rows columns dimension. variables can named (names passed labeller). compatibility classic interface, can also formula character vector. Use either one sided formula, ~+ b, character vector, c(\"\", \"b\"). scales scales fixed (\"fixed\", default), free (\"free\"), free one dimension (\"free_x\", \"free_y\")? space size panels fixed relative range respective position scales shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary. labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one vars(cyl, ). output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). can use different labeling functions different kind labels, example use label_parsed() formatting facet labels. label_value() used default, check details pointers options. drop TRUE, default, factor levels used data automatically dropped. FALSE, factor levels shown, regardless whether appear data. strip.position default, labels displayed top plot. Using strip.position possible place labels either four sides setting strip.position = c(\"top\",   \"bottom\", \"left\", \"right\")","code":""},{"path":"https://ggforce.data-imaginist.com/reference/facet_row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One-dimensional facets — facet_row","text":"","code":"# Standard use ggplot(mtcars) +   geom_point(aes(disp, mpg)) +   facet_col(~gear)  # It retains the ability to have unique scales for each panel ggplot(mtcars) +   geom_point(aes(disp, mpg)) +   facet_col(~gear, scales = 'free')   # But can have free sizing along the stacking dimension ggplot(mtcars) +   geom_point(aes(disp, mpg)) +   facet_col(~gear, scales = 'free', space = 'free')   # And you can position the strip where-ever you like ggplot(mtcars) +   geom_point(aes(disp, mpg)) +   facet_col(~gear, scales = 'free', space = 'free', strip.position = 'bottom')"},{"path":"https://ggforce.data-imaginist.com/reference/facet_stereo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a stereogram plot — facet_stereo","title":"Create a stereogram plot — facet_stereo","text":", arguably pretty useless function, lets create plots sense depth creating two slightly different versions plot corresponds eyes see plot 3 dimensional. experience effect look plots 3D hardware Google Cardboard relaxing eyes focusing distance. depth point calculated layers depth aesthetic supplied. scaling depth can controlled scale_depth() control aesthetic. Negative values result features placed behind paper plane, positive values result features hovering front paper. features within layer sorted closest plotted top distant, done layers. Thus, layers always plotted top others, even features one layer lies behind features layer behind . depth experience inaccurate used conveying important data. Regard party-trick...","code":""},{"path":"https://ggforce.data-imaginist.com/reference/facet_stereo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a stereogram plot — facet_stereo","text":"","code":"facet_stereo(IPD = 63.5, panel.size = 200, shrink = TRUE)"},{"path":"https://ggforce.data-imaginist.com/reference/facet_stereo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a stereogram plot — facet_stereo","text":"IPD interpupillary distance (mm) used calculating point displacement. default value average genders panel.size final plot size mm. IPD used calculate point displacement. take value literal experiment get nice effect. Lower values gives higher displacement thus require plots observed closer distance shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary.","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/facet_stereo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a stereogram plot — facet_stereo","text":"","code":"# You'll have to accept a warning about depth being an unknown aesthetic ggplot(mtcars) +   geom_point(aes(mpg, disp, depth = cyl)) +   facet_stereo() #> Warning: Ignoring unknown aesthetics: depth #> Warning: The `scale_name` argument of `continuous_scale()` is deprecated as of ggplot2 #> 3.5.0."},{"path":"https://ggforce.data-imaginist.com/reference/facet_wrap_paginate.html","id":null,"dir":"Reference","previous_headings":"","what":"Split facet_wrap over multiple plots — facet_wrap_paginate","title":"Split facet_wrap over multiple plots — facet_wrap_paginate","text":"extension ggplot2::facet_wrap() allow split facetted plot multiple pages. define number rows columns per page well page number plot, function automatically plot correct panels. Usually put loop render pages one one.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/facet_wrap_paginate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split facet_wrap over multiple plots — facet_wrap_paginate","text":"","code":"facet_wrap_paginate(   facets,   nrow = NULL,   ncol = NULL,   scales = \"fixed\",   shrink = TRUE,   labeller = \"label_value\",   as.table = TRUE,   switch = deprecated(),   drop = TRUE,   dir = \"h\",   strip.position = \"top\",   page = 1 )"},{"path":"https://ggforce.data-imaginist.com/reference/facet_wrap_paginate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split facet_wrap over multiple plots — facet_wrap_paginate","text":"facets set variables expressions quoted vars() defining faceting groups rows columns dimension. variables can named (names passed labeller). compatibility classic interface, can also formula character vector. Use either one sided formula, ~+ b, character vector, c(\"\", \"b\"). nrow, ncol Number rows columns scales scales fixed (\"fixed\", default), free (\"free\"), free one dimension (\"free_x\", \"free_y\")? shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary. labeller function takes one data frame labels returns list data frame character vectors. input column corresponds one factor. Thus one vars(cyl, ). output column gets displayed one separate line strip label. function inherit \"labeller\" S3 class compatibility labeller(). can use different labeling functions different kind labels, example use label_parsed() formatting facet labels. label_value() used default, check details pointers options. .table TRUE, default, facets laid like table highest values bottom-right. FALSE, facets laid like plot highest value top-right. switch default, labels displayed top right plot. \"x\", top labels displayed bottom. \"y\", right-hand side labels displayed left. Can also set \"\". drop TRUE, default, factor levels used data automatically dropped. FALSE, factor levels shown, regardless whether appear data. dir Direction: either \"h\" horizontal, default, \"v\", vertical. strip.position default, labels displayed top plot. Using strip.position possible place labels either four sides setting strip.position = c(\"top\",   \"bottom\", \"left\", \"right\") page page draw","code":""},{"path":"https://ggforce.data-imaginist.com/reference/facet_wrap_paginate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Split facet_wrap over multiple plots — facet_wrap_paginate","text":"either ncol nrow NULL function fall back standard facet_wrap functionality.","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/facet_wrap_paginate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split facet_wrap over multiple plots — facet_wrap_paginate","text":"","code":"ggplot(diamonds) +     geom_point(aes(carat, price), alpha = 0.1) +     facet_wrap_paginate(~ cut:clarity, ncol = 3, nrow = 3, page = 4)"},{"path":"https://ggforce.data-imaginist.com/reference/facet_zoom.html","id":null,"dir":"Reference","previous_headings":"","what":"Facet data for zoom with context — facet_zoom","title":"Facet data for zoom with context — facet_zoom","text":"facetting provides means zoom subset data, keeping view full dataset separate panel. zoomed-area indicated full dataset panel reference. possible zoom x y axis time. done possible get zoom separately combined just combined.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/facet_zoom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facet data for zoom with context — facet_zoom","text":"","code":"facet_zoom(   x,   y,   xy,   zoom.data,   xlim = NULL,   ylim = NULL,   split = FALSE,   horizontal = TRUE,   zoom.size = 2,   show.area = TRUE,   shrink = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/facet_zoom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facet data for zoom with context — facet_zoom","text":"x, y, xy expression evaluating logical vector determines subset data zoom zoom.data expression evaluating logical vector. TRUE data shows zoom panels. FALSE data show context panel. NA data show panels. xlim, ylim Specific zoom ranges axis. present override x, y, /xy. split x y given, axis zoom shown separately well? Defaults FALSE horizontal x y given split = FALSE zoom panel positioned relative full data panel? Defaults TRUE zoom.size Sets relative size zoom panel full data panel. default (2) makes zoom panel twice size full data panel. show.area zoom area drawn data points full data panel? Defaults TRUE. shrink TRUE, shrink scales fit output statistics, raw data. FALSE, range raw data statistical summary.","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/facet_zoom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Facet data for zoom with context — facet_zoom","text":"","code":"# Zoom in on the versicolor species on the x-axis ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +   geom_point() +   facet_zoom(x = Species == 'versicolor')   # Zoom in on versicolor on both axes ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +   geom_point() +   facet_zoom(xy = Species == 'versicolor')   # Use different zoom criteria on each axis ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +   geom_point() +   facet_zoom(x = Species != 'setosa', y = Species == 'versicolor')   # Get each axis zoom separately as well ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +   geom_point() +   facet_zoom(xy = Species == 'versicolor', split = TRUE)   # Define the zoom area directly ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +   geom_point() +   facet_zoom(xlim = c(2, 4))   # Selectively show data in the zoom panel ggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +   geom_point() +   facet_zoom(x = Species == 'versicolor', zoom.data = Species == 'versicolor')"},{"path":"https://ggforce.data-imaginist.com/reference/gather_set_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy data for use with geom_parallel_sets — gather_set_data","title":"Tidy data for use with geom_parallel_sets — gather_set_data","text":"helper function makes easy change tidy data tidy(er) format can used geom_parallel_sets.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/gather_set_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy data for use with geom_parallel_sets — gather_set_data","text":"","code":"gather_set_data(data, x, id_name = \"id\")"},{"path":"https://ggforce.data-imaginist.com/reference/gather_set_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy data for use with geom_parallel_sets — gather_set_data","text":"data tidy dataframe categorical columns x columns use axes parallel sets diagram id_name name column contain original index row.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/gather_set_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy data for use with geom_parallel_sets — gather_set_data","text":"data.frame","code":""},{"path":"https://ggforce.data-imaginist.com/reference/gather_set_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy data for use with geom_parallel_sets — gather_set_data","text":"","code":"data <- reshape2::melt(Titanic) head(gather_set_data(data, 1:4)) #>   Class    Sex   Age Survived value id     x    y #> 1   1st   Male Child       No     0  1 Class  1st #> 2   2nd   Male Child       No     0  2 Class  2nd #> 3   3rd   Male Child       No    35  3 Class  3rd #> 4  Crew   Male Child       No     0  4 Class Crew #> 5   1st Female Child       No     0  5 Class  1st #> 6   2nd Female Child       No     0  6 Class  2nd head(gather_set_data(data, c(\"Class\",\"Sex\",\"Age\",\"Survived\"))) #>   Class    Sex   Age Survived value id     x    y #> 1   1st   Male Child       No     0  1 Class  1st #> 2   2nd   Male Child       No     0  2 Class  2nd #> 3   3rd   Male Child       No    35  3 Class  3rd #> 4  Crew   Male Child       No     0  4 Class Crew #> 5   1st Female Child       No     0  5 Class  1st #> 6   2nd Female Child       No     0  6 Class  2nd"},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"Arcs based on radius and radians — geom_arc","title":"Arcs based on radius and radians — geom_arc","text":"set stats geoms makes possible draw circle segments based center point, radius start end angle (radians). functions intended cartesian coordinate systems makes possible create circular plot types without using ggplot2::coord_polar() coordinate system.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arcs based on radius and radians — geom_arc","text":"","code":"stat_arc(   mapping = NULL,   data = NULL,   geom = \"arc\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   n = 360,   inherit.aes = TRUE,   ... )  geom_arc(   mapping = NULL,   data = NULL,   stat = \"arc\",   position = \"identity\",   n = 360,   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  stat_arc2(   mapping = NULL,   data = NULL,   geom = \"path_interpolate\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   n = 360,   inherit.aes = TRUE,   ... )  geom_arc2(   mapping = NULL,   data = NULL,   stat = \"arc2\",   position = \"identity\",   n = 360,   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  stat_arc0(   mapping = NULL,   data = NULL,   geom = \"arc0\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_arc0(   mapping = NULL,   data = NULL,   stat = \"arc0\",   position = \"identity\",   ncp = 5,   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arcs based on radius and radians — geom_arc","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. n smoothness arc. Sets number points use arc cover full circle inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. arrow Arrow specification, created grid::arrow(). lineend Line end style (round, butt, square). ncp number control points used draw arc curveGrob. Determines well arc approximates circle section","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arcs based on radius and radians — geom_arc","text":"arc segment line describing circle. fundamental visual element donut charts length segment (conversely angular span segment) describes proportion entety.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Arcs based on radius and radians — geom_arc","text":"geom_arc understand following aesthetics (required aesthetics bold): x0 y0 r start end color linewidth linetype alpha lineend","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Arcs based on radius and radians — geom_arc","text":"x, y start coordinates segment xend, yend end coordinates segment curvature curvature curveGrob match circle","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arcs based on radius and radians — geom_arc","text":"","code":"# Lets make some data arcs <- data.frame(   start = seq(0, 2 * pi, length.out = 11)[-11],   end = seq(0, 2 * pi, length.out = 11)[-1],   r = rep(1:2, 5) )  # Behold the arcs ggplot(arcs) +   geom_arc(aes(x0 = 0, y0 = 0, r = r, start = start, end = end,                linetype = factor(r)))   # Use the calculated index to map values to position on the arc ggplot(arcs) +   geom_arc(aes(x0 = 0, y0 = 0, r = r, start = start, end = end,                size = after_stat(index)), lineend = 'round') #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead.   # The 0 version maps directly to curveGrob instead of calculating the points # itself ggplot(arcs) +   geom_arc0(aes(x0 = 0, y0 = 0, r = r, start = start, end = end,                 linetype = factor(r)))   # The 2 version allows interpolation of aesthetics between the start and end # points arcs2 <- data.frame(   angle = c(arcs$start, arcs$end),   r = rep(arcs$r, 2),   group = rep(1:10, 2),   colour = sample(letters[1:5], 20, TRUE) )  ggplot(arcs2) +   geom_arc2(aes(x0 = 0, y0 = 0, r = r, end = angle, group = group,                 colour = colour), size = 2)"},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Arcs and wedges as polygons — geom_arc_bar","title":"Arcs and wedges as polygons — geom_arc_bar","text":"set stats geoms makes possible draw arcs wedges known pie donut charts well specialized plottypes sunburst plots.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arcs and wedges as polygons — geom_arc_bar","text":"","code":"stat_arc_bar(   mapping = NULL,   data = NULL,   geom = \"arc_bar\",   position = \"identity\",   n = 360,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  stat_pie(   mapping = NULL,   data = NULL,   geom = \"arc_bar\",   position = \"identity\",   n = 360,   sep = 0,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_arc_bar(   mapping = NULL,   data = NULL,   stat = \"arc_bar\",   position = \"identity\",   n = 360,   expand = 0,   radius = 0,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arcs and wedges as polygons — geom_arc_bar","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. n number points used draw full circle. number points arc calculated n / span--arc na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. sep separation arcs pie/donut charts stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. expand numeric unit vector length one, specifying expansion amount. Negative values result contraction instead. value given numeric understood proportion plot area width. radius expand specifying corner radius.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc_bar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arcs and wedges as polygons — geom_arc_bar","text":"arc bar thick version arc; , circle segment drawn polygon way rectangle thick version line. wedge special case arc inner radius 0. opposed applying coord_polar stacked bar chart, layers drawn cartesian space, allows transformations possible native ggplot2 approach. notable option explode arcs wedgets away center point, thus detaching main pie/donut.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc_bar.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Arcs and wedges as polygons — geom_arc_bar","text":"geom_arc_bar understand following aesthetics (required aesthetics bold): x0 y0 r0 r start - using stat_arc_bar end - using stat_arc_bar amount - using stat_pie explode color fill linewidth linetype alpha","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc_bar.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Arcs and wedges as polygons — geom_arc_bar","text":"x, y x y coordinates polygon x, y start coordinates segment","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/geom_arc_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arcs and wedges as polygons — geom_arc_bar","text":"","code":"# If you know the angle spans to plot it is easy arcs <- data.frame(   start = seq(0, 2 * pi, length.out = 11)[-11],   end = seq(0, 2 * pi, length.out = 11)[-1],   r = rep(1:2, 5) )  # Behold the arcs ggplot(arcs) +   geom_arc_bar(aes(x0 = 0, y0 = 0, r0 = r - 1, r = r, start = start,                    end = end, fill = r))   # geom_arc_bar uses geom_shape to draw the arcs, so you have all the # possibilities of that as well, e.g. rounding of corners ggplot(arcs) +   geom_arc_bar(aes(x0 = 0, y0 = 0, r0 = r - 1, r = r, start = start,                    end = end, fill = r), radius = unit(4, 'mm'))   # If you got values for a pie chart, use stat_pie states <- c(   'eaten', \"eaten but said you didn\\'t\", 'cat took it', 'for tonight',   'will decompose slowly' ) pie <- data.frame(   state = factor(rep(states, 2), levels = states),   type = rep(c('Pie', 'Donut'), each = 5),   r0 = rep(c(0, 0.8), each = 5),   focus = rep(c(0.2, 0, 0, 0, 0), 2),   amount = c(4, 3, 1, 1.5, 6, 6, 1, 2, 3, 2) )  # Look at the cakes ggplot() + geom_arc_bar(aes(   x0 = 0, y0 = 0, r0 = r0, r = 1, amount = amount,   fill = state, explode = focus ), data = pie, stat = 'pie' ) +   facet_wrap(~type, ncol = 1) +   coord_fixed() +   theme_no_axes() +   scale_fill_brewer('', type = 'qual')"},{"path":"https://ggforce.data-imaginist.com/reference/geom_autohistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"A distribution geoms that fills the panel and works with discrete and continuous data — geom_autodensity","title":"A distribution geoms that fills the panel and works with discrete and continuous data — geom_autodensity","text":"versions histogram density geoms designed specifically diagonal plotting facet_matrix(). differ ggplot2::geom_histogram() ggplot2::geom_density() defaults mapping x y .panel_x .panel_y respectively, ignore y scale panel fills , work continuous discrete x scales.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_autohistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A distribution geoms that fills the panel and works with discrete and continuous data — geom_autodensity","text":"","code":"geom_autodensity(   mapping = NULL,   data = NULL,   stat = \"autodensity\",   position = \"floatstack\",   ...,   bw = \"nrd0\",   adjust = 1,   kernel = \"gaussian\",   n = 512,   trim = FALSE,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   outline.type = \"upper\" )  geom_autohistogram(   mapping = NULL,   data = NULL,   stat = \"autobin\",   position = \"floatstack\",   ...,   bins = NULL,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_autohistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A distribution geoms that fills the panel and works with discrete and continuous data — geom_autodensity","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. bw smoothing bandwidth used. numeric, standard deviation smoothing kernel. character, rule choose bandwidth, listed stats::bw.nrd(). Note automatic calculation bandwidth take weights account. adjust multiplicate bandwidth adjustment. makes possible adjust bandwidth still using bandwidth estimator. example, adjust = 1/2 means use half default bandwidth. kernel Kernel. See list available kernels density(). n number equally spaced points density estimated, power two, see density() details trim FALSE, default, density computed full range data. TRUE, density computed range group: typically means estimated x values line-, hence able stack density values. parameter matters displaying multiple densities one plot manually adjusting scale limits. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). outline.type Type outline area; \"\" draws upper lower lines, \"upper\"/\"lower\" draws respective lines . \"full\" draws closed polygon around area. bins Number bins. Overridden binwidth. Defaults 30.","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/geom_autohistogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A distribution geoms that fills the panel and works with discrete and continuous data — geom_autodensity","text":"","code":"# A matrix plot with a mix of discrete and continuous variables p <- ggplot(mpg) +   geom_autopoint() +   facet_matrix(vars(drv:fl), layer.diag = 2, grid.y.diag = FALSE) p   # Diagonal histograms p + geom_autohistogram() #> Warning: Computation failed in `stat_autobin()`. #> Caused by error in `compute_group()`: #> ! unused arguments (origin = NULL, right = NULL) #> Warning: Computation failed in `stat_autobin()`. #> Caused by error in `compute_group()`: #> ! unused arguments (origin = NULL, right = NULL)   # Diagonal density distributions p + geom_autodensity()   # You can use them like regular layers with groupings etc p + geom_autodensity(aes(colour = drv, fill = drv),                      alpha = 0.4)"},{"path":"https://ggforce.data-imaginist.com/reference/geom_autopoint.html","id":null,"dir":"Reference","previous_headings":"","what":"A point geom specialised for scatterplot matrices — geom_autopoint","title":"A point geom specialised for scatterplot matrices — geom_autopoint","text":"geom specialisation ggplot2::geom_point() two changes. defaults mapping x y .panel_x .panel_y respectively, defaults using position_auto() jitter points based combination position scale types.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_autopoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A point geom specialised for scatterplot matrices — geom_autopoint","text":"","code":"geom_autopoint(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"auto\",   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_autopoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A point geom specialised for scatterplot matrices — geom_autopoint","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/geom_autopoint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A point geom specialised for scatterplot matrices — geom_autopoint","text":"","code":"# Continuous vs continuous: No jitter ggplot(mpg) + geom_autopoint(aes(cty, hwy))   # Continuous vs discrete: sina jitter ggplot(mpg) + geom_autopoint(aes(cty, drv))   # Discrete vs discrete: disc-jitter ggplot(mpg) + geom_autopoint(aes(fl, drv))   # Used with facet_matrix (x and y are automatically mapped) ggplot(mpg) +   geom_autopoint() +   facet_matrix(vars(drv:fl))"},{"path":"https://ggforce.data-imaginist.com/reference/geom_bezier.html","id":null,"dir":"Reference","previous_headings":"","what":"Create quadratic or cubic bezier curves — geom_bezier","title":"Create quadratic or cubic bezier curves — geom_bezier","text":"set geoms makes possible connect points creating either quadratic cubic beziers. bezier bezier2 work calculating points along bezier connecting draw curve. bezier0 directly draws bezier using bezierGrob. line geom_link() geom_link2() differences geom_bezier creates points, assign index interpolated point repeat aesthetics start point, geom_bezier2 interpolates aesthetics start end points.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bezier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create quadratic or cubic bezier curves — geom_bezier","text":"","code":"stat_bezier(   mapping = NULL,   data = NULL,   geom = \"path\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   n = 100,   inherit.aes = TRUE,   ... )  geom_bezier(   mapping = NULL,   data = NULL,   stat = \"bezier\",   position = \"identity\",   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   n = 100,   ... )  stat_bezier2(   mapping = NULL,   data = NULL,   geom = \"path_interpolate\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   n = 100,   inherit.aes = TRUE,   ... )  geom_bezier2(   mapping = NULL,   data = NULL,   stat = \"bezier2\",   position = \"identity\",   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   n = 100,   ... )  stat_bezier0(   mapping = NULL,   data = NULL,   geom = \"bezier0\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_bezier0(   mapping = NULL,   data = NULL,   stat = \"bezier0\",   position = \"identity\",   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_bezier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create quadratic or cubic bezier curves — geom_bezier","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. n number points create segment inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. arrow Arrow specification, created grid::arrow(). lineend Line end style (round, butt, square).","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bezier.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create quadratic or cubic bezier curves — geom_bezier","text":"Input data understood sequence data points first start point, followed one two control points end point. 4 less 3 points per group throw error. grid::bezierGrob() takes cubic beziers three points supplied middle one duplicated. , along fact grid::bezierGrob() estimates curve using x-spline means curves produced geom_bezier geom_bezier2 deviates produced geom_bezier0. want true bezier paths use geom_bezier geom_bezier2.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bezier.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Create quadratic or cubic bezier curves — geom_bezier","text":"geom_bezier, geom_bezier2 geom_bezier0 understand following aesthetics (required aesthetics bold): x y color linewidth linetype alpha lineend","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bezier.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Create quadratic or cubic bezier curves — geom_bezier","text":"x, y interpolated point coordinates index progression along interpolation mapped 0 1","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bezier.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create quadratic or cubic bezier curves — geom_bezier","text":"","code":"beziers <- data.frame(   x = c(1, 2, 3, 4, 4, 6, 6),   y = c(0, 2, 0, 0, 2, 2, 0),   type = rep(c('cubic', 'quadratic'), c(3, 4)),   point = c('end', 'control', 'end', 'end', 'control', 'control', 'end'),   colour = letters[1:7] ) help_lines <- data.frame(   x = c(1, 3, 4, 6),   xend = c(2, 2, 4, 6),   y = 0,   yend = 2 )  # See how control points affect the bezier ggplot() +   geom_segment(aes(x = x, xend = xend, y = y, yend = yend),                data = help_lines,                arrow = arrow(length = unit(c(0, 0, 0.5, 0.5), 'cm')),                colour = 'grey') +   geom_bezier(aes(x = x, y = y, group = type, linetype = type),               data = beziers) +   geom_point(aes(x = x, y = y, colour = point),              data = beziers)   # geom_bezier0 is less exact ggplot() +   geom_segment(aes(x = x, xend = xend, y = y, yend = yend),                data = help_lines,                arrow = arrow(length = unit(c(0, 0, 0.5, 0.5), 'cm')),                colour = 'grey') +   geom_bezier0(aes(x = x, y = y, group = type, linetype = type),                data = beziers) +   geom_point(aes(x = x, y = y, colour = point),              data = beziers)   # Use geom_bezier2 to interpolate between endpoint aesthetics ggplot(beziers) +   geom_bezier2(aes(x = x, y = y, group = type, colour = colour))"},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline.html","id":null,"dir":"Reference","previous_headings":"","what":"B-splines based on control points — geom_bspline","title":"B-splines based on control points — geom_bspline","text":"set stats geoms makes possible draw b-splines based set control points. geom_bezier() exists several versions strengths. base version calculates b-spline number points along spline connects path. *2 version addition interpolates aesthetics control point. makes *2 version considerably slower used unless needed. *0 version uses grid::xsplineGrob() shape = 1 approximate b-spline.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"B-splines based on control points — geom_bspline","text":"","code":"stat_bspline(   mapping = NULL,   data = NULL,   geom = \"path\",   position = \"identity\",   na.rm = FALSE,   n = 100,   type = \"clamped\",   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_bspline(   mapping = NULL,   data = NULL,   stat = \"bspline\",   position = \"identity\",   arrow = NULL,   n = 100,   type = \"clamped\",   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  stat_bspline2(   mapping = NULL,   data = NULL,   geom = \"path_interpolate\",   position = \"identity\",   na.rm = FALSE,   n = 100,   type = \"clamped\",   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_bspline2(   mapping = NULL,   data = NULL,   stat = \"bspline2\",   position = \"identity\",   arrow = NULL,   n = 100,   type = \"clamped\",   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  stat_bspline0(   mapping = NULL,   data = NULL,   geom = \"bspline0\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   type = \"clamped\",   ... )  geom_bspline0(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   type = \"clamped\",   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"B-splines based on control points — geom_bspline","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. n number points generated spline type Either 'clamped' (default) 'open'. former creates knot sequence ensures splines starts ends terminal control points. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. arrow Arrow specification, created grid::arrow(). lineend Line end style (round, butt, square).","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"B-splines based on control points — geom_bspline","text":"geom_bspline understand following aesthetics (required aesthetics bold): x y color linewidth linetype alpha lineend","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"B-splines based on control points — geom_bspline","text":"x, y coordinates path describing spline index progression along interpolation mapped 0 1","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"B-splines based on control points — geom_bspline","text":"Thomas Lin Pedersen. C++ code De Boor's algorithm adapted Jason Yu-Tseh Chi implementation","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"B-splines based on control points — geom_bspline","text":"","code":"# Define some control points cp <- data.frame(   x = c(     0, -5, -5, 5, 5, 2.5, 5, 7.5, 5, 2.5, 5, 7.5, 5, -2.5, -5, -7.5, -5,     -2.5, -5, -7.5, -5   ),   y = c(     0, -5, 5, -5, 5, 5, 7.5, 5, 2.5, -5, -7.5, -5, -2.5, 5, 7.5, 5, 2.5,     -5, -7.5, -5, -2.5   ),   class = sample(letters[1:3], 21, replace = TRUE) )  # Now create some paths between them paths <- data.frame(   ind = c(     7, 5, 8, 8, 5, 9, 9, 5, 6, 6, 5, 7, 7, 5, 1, 3, 15, 8, 5, 1, 3, 17, 9, 5,     1, 2, 19, 6, 5, 1, 4, 12, 7, 5, 1, 4, 10, 6, 5, 1, 2, 20   ),   group = c(     1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7,     7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10   ) ) paths$x <- cp$x[paths$ind] paths$y <- cp$y[paths$ind] paths$class <- cp$class[paths$ind]  ggplot(paths) +   geom_bspline(aes(x = x, y = y, group = group, colour = after_stat(index))) +   geom_point(aes(x = x, y = y), data = cp, color = 'steelblue')   ggplot(paths) +   geom_bspline2(aes(x = x, y = y, group = group, colour = class)) +   geom_point(aes(x = x, y = y), data = cp, color = 'steelblue')   ggplot(paths) +   geom_bspline0(aes(x = x, y = y, group = group)) +   geom_point(aes(x = x, y = y), data = cp, color = 'steelblue')"},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline_closed.html","id":null,"dir":"Reference","previous_headings":"","what":"Create closed b-spline shapes — geom_bspline_closed","title":"Create closed b-spline shapes — geom_bspline_closed","text":"geom creates closed b-spline curves draws shapes. closed b-spline achieved wrapping control points rather knots. *0 version uses grid::xsplineGrob() function open = FALSE can thus manipulated shape geom way base version (expand, contract, etc).","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline_closed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create closed b-spline shapes — geom_bspline_closed","text":"","code":"stat_bspline_closed(   mapping = NULL,   data = NULL,   geom = \"shape\",   position = \"identity\",   na.rm = FALSE,   n = 100,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_bspline_closed(   mapping = NULL,   data = NULL,   stat = \"bspline\",   position = \"identity\",   n = 100,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_bspline_closed0(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline_closed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create closed b-spline shapes — geom_bspline_closed","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. n number points generated spline show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline_closed.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Create closed b-spline shapes — geom_bspline_closed","text":"geom_bspline_closed understand following aesthetics (required aesthetics bold): x y color fill linewidth linetype alpha","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline_closed.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Create closed b-spline shapes — geom_bspline_closed","text":"x, y coordinates path describing spline index progression along interpolation mapped 0 1","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline_closed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create closed b-spline shapes — geom_bspline_closed","text":"Thomas Lin Pedersen. C++ code De Boor's algorithm adapted Jason Yu-Tseh Chi implementation","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_bspline_closed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create closed b-spline shapes — geom_bspline_closed","text":"","code":"# Create 6 random control points controls <- data.frame(   x = runif(6),   y = runif(6) )  ggplot(controls, aes(x, y)) +   geom_polygon(fill = NA, colour = 'grey') +   geom_point(colour = 'red') +   geom_bspline_closed(alpha = 0.5)   # The 0 version approximates the correct shape ggplot(controls, aes(x, y)) +   geom_polygon(fill = NA, colour = 'grey') +   geom_point(colour = 'red') +   geom_bspline_closed0(alpha = 0.5)   # But only the standard version supports geom_shape operations # Be aware of self-intersections though ggplot(controls, aes(x, y)) +   geom_polygon(fill = NA, colour = 'grey') +   geom_point(colour = 'red') +   geom_bspline_closed(alpha = 0.5, expand = unit(2, 'cm'))"},{"path":"https://ggforce.data-imaginist.com/reference/geom_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Circles based on center and radius — geom_circle","title":"Circles based on center and radius — geom_circle","text":"set stats geoms makes possible draw circles based center point radius. contrast using ggplot2::geom_point(), size circles related coordinate system separate scale. functions intended cartesian coordinate systems produce true circle ggplot2::coord_fixed() used.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circles based on center and radius — geom_circle","text":"","code":"stat_circle(   mapping = NULL,   data = NULL,   geom = \"circle\",   position = \"identity\",   n = 360,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_circle(   mapping = NULL,   data = NULL,   stat = \"circle\",   position = \"identity\",   n = 360,   expand = 0,   radius = 0,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circles based on center and radius — geom_circle","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. n number points generated path per full circle. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. expand numeric unit vector length one, specifying expansion amount. Negative values result contraction instead. value given numeric understood proportion plot area width. radius expand specifying corner radius.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_circle.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Circles based on center and radius — geom_circle","text":"intend draw bubble chart use ggplot2::geom_point() map variable size scale","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_circle.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Circles based on center and radius — geom_circle","text":"geom_circle understand following aesthetics (required aesthetics bold): x0 y0 r color fill linewidth linetype alpha lineend","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_circle.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Circles based on center and radius — geom_circle","text":"x, y start coordinates segment","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/geom_circle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circles based on center and radius — geom_circle","text":"","code":"# Lets make some data circles <- data.frame(   x0 = rep(1:3, 3),   y0 = rep(1:3, each = 3),   r = seq(0.1, 1, length.out = 9) )  # Behold some circles ggplot() +   geom_circle(aes(x0 = x0, y0 = y0, r = r, fill = r), data = circles)   # Use coord_fixed to ensure true circularity ggplot() +   geom_circle(aes(x0 = x0, y0 = y0, r = r, fill = r), data = circles) +   coord_fixed()"},{"path":"https://ggforce.data-imaginist.com/reference/geom_delvor.html","id":null,"dir":"Reference","previous_headings":"","what":"Voronoi tesselation and delaunay triangulation — geom_voronoi","title":"Voronoi tesselation and delaunay triangulation — geom_voronoi","text":"set geoms stats allows display voronoi tesselation delaunay triangulation, polygons line segments. Furthermore lets augment point data related summary statistics. computations based deldir::deldir() package.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_delvor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Voronoi tesselation and delaunay triangulation — geom_voronoi","text":"","code":"geom_voronoi_tile(   mapping = NULL,   data = NULL,   stat = \"voronoi_tile\",   position = \"identity\",   na.rm = FALSE,   bound = NULL,   eps = 1e-09,   max.radius = NULL,   normalize = FALSE,   asp.ratio = 1,   expand = 0,   radius = 0,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_voronoi_segment(   mapping = NULL,   data = NULL,   stat = \"voronoi_segment\",   position = \"identity\",   na.rm = FALSE,   bound = NULL,   eps = 1e-09,   normalize = FALSE,   asp.ratio = 1,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_delaunay_tile(   mapping = NULL,   data = NULL,   stat = \"delaunay_tile\",   position = \"identity\",   na.rm = FALSE,   bound = NULL,   eps = 1e-09,   normalize = FALSE,   asp.ratio = 1,   expand = 0,   radius = 0,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_delaunay_segment(   mapping = NULL,   data = NULL,   stat = \"delaunay_segment\",   position = \"identity\",   na.rm = FALSE,   bound = NULL,   eps = 1e-09,   normalize = FALSE,   asp.ratio = 1,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_delaunay_segment2(   mapping = NULL,   data = NULL,   stat = \"delaunay_segment2\",   position = \"identity\",   na.rm = FALSE,   bound = NULL,   eps = 1e-09,   normalize = FALSE,   asp.ratio = 1,   n = 100,   show.legend = NA,   inherit.aes = TRUE,   ... )  stat_delvor_summary(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   na.rm = FALSE,   bound = NULL,   eps = 1e-09,   normalize = FALSE,   asp.ratio = 1,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_delvor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Voronoi tesselation and delaunay triangulation — geom_voronoi","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. bound bounding rectangle tesselation custom polygon clip tesselation . Defaults NULL creates rectangle expanded 10\\ vector giving bounds following order: xmin, xmax, ymin, ymax. supplied polygon either 2-column matrix data.frame containing x y column. eps value epsilon used testing whether quantity zero, mainly context whether points collinear. anomalous errors arise, possible may averted adjusting value eps upward downward. max.radius maximum distance tile can extend point origin. effect clip tile circle centered point given radius. normalize = TRUE radius given relative normalized values normalize coordinates normalized prior calculations. x y wildly different ranges can lead tesselation triangulation seems plotted without ggplot2::coord_fixed(). Normalization coordinates solves . coordinates transformed back calculations. asp.ratio normalize = TRUE x values multiplied amount normalization. expand numeric unit vector length one, specifying expansion amount. Negative values result contraction instead. value given numeric understood proportion plot area width. radius expand specifying corner radius. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. n number points create segment geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_delvor.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Voronoi tesselation and delaunay triangulation — geom_voronoi","text":"geom_voronoi_tile geom_delaunay_tile understand following aesthetics (required aesthetics bold): x y alpha color fill linetype size geom_voronoi_segment, geom_delaunay_segment, geom_delaunay_segment2 understand following aesthetics (required aesthetics bold): x y alpha color linetype size","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_delvor.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Voronoi tesselation and delaunay triangulation — geom_voronoi","text":"stat_delvor_summary computes following variables: x, y switch.centroid = TRUE coordinates voronoi tile centroid, otherwise original point xcent, ycent switch.centroid = FALSE coordinates voronoi tile centroid, otherwise NULL xorig, yorig switch.centroid = TRUE coordinates original point, otherwise NULL ntri Number triangles emanating point triarea total area triangles emanating point divided 3 triprop triarea divided sum area triangles nsides Number sides voronoi tile associated point nedges Number sides associated voronoi tile part bounding box vorarea area voronoi tile associated point vorprop vorarea divided sum voronoi tiles","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_delvor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Voronoi tesselation and delaunay triangulation — geom_voronoi","text":"","code":"# Voronoi # You usually wants all points to take part in the same tesselation so set # the group aesthetic to a constant (-1L is just a convention) ggplot(iris, aes(Sepal.Length, Sepal.Width, group = -1L)) +   geom_voronoi_tile(aes(fill = Species)) +   geom_voronoi_segment() +   geom_text(aes(label = after_stat(nsides), size = after_stat(vorarea)),     stat = 'delvor_summary', switch.centroid = TRUE   ) #> Warning: `stat_voronoi_tile()` is dropping duplicated points #> Warning: `stat_voronoi_segment()` is dropping duplicated points #> Warning: `stat_delvor_summary()` is dropping duplicated points   # Difference of normalize = TRUE (segment layer is calculated without # normalisation) ggplot(iris, aes(Sepal.Length, Sepal.Width, group = -1L)) +   geom_voronoi_tile(aes(fill = Species), normalize = TRUE) +   geom_voronoi_segment() #> Warning: `stat_voronoi_tile()` is dropping duplicated points #> Warning: `stat_voronoi_segment()` is dropping duplicated points   # Set a max radius ggplot(iris, aes(Sepal.Length, Sepal.Width, group = -1L)) +   geom_voronoi_tile(aes(fill = Species), colour = 'black', max.radius = 0.25) #> Warning: `stat_voronoi_tile()` is dropping duplicated points   # Set custom bounding polygon triangle <- cbind(c(3, 9, 6), c(1, 1, 6)) ggplot(iris, aes(Sepal.Length, Sepal.Width, group = -1L)) +   geom_voronoi_tile(aes(fill = Species), colour = 'black', bound = triangle) #> Warning: `stat_voronoi_tile()` is dropping duplicated points   # Use geom_shape functionality to round corners etc ggplot(iris, aes(Sepal.Length, Sepal.Width, group = -1L)) +   geom_voronoi_tile(aes(fill = Species), colour = 'black',                     expand = unit(-.5, 'mm'), radius = unit(2, 'mm')) #> Warning: `stat_voronoi_tile()` is dropping duplicated points   # Delaunay triangles ggplot(iris, aes(Sepal.Length, Sepal.Width)) +   geom_delaunay_tile(alpha = 0.3, colour = 'black') #> Warning: `stat_delaunay_tile()` is dropping duplicated points   # Use geom_delauney_segment2 to interpolate aestetics between end points ggplot(iris, aes(Sepal.Length, Sepal.Width)) +   geom_delaunay_segment2(aes(colour = Species, group = -1), size = 2,                          lineend = 'round') #> Warning: `stat_delaunay_segment2()` is dropping duplicated points"},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw horizontal diagonals — geom_diagonal","title":"Draw horizontal diagonals — geom_diagonal","text":"diagonal bezier curve control points moved perpendicularly towards center either x y direction fixed amount. versions provided calculates horizontal diagonals meaning x coordinate moved achieve control point. geom_diagonal() stat_diagonal() functions simply helpers takes care calculating position control points forwards actual bezier calculations geom_bezier().","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw horizontal diagonals — geom_diagonal","text":"","code":"stat_diagonal(   mapping = NULL,   data = NULL,   geom = \"path\",   position = \"identity\",   n = 100,   strength = 0.5,   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_diagonal(   mapping = NULL,   data = NULL,   stat = \"diagonal\",   position = \"identity\",   n = 100,   na.rm = FALSE,   orientation = NA,   strength = 0.5,   show.legend = NA,   inherit.aes = TRUE,   ... )  stat_diagonal2(   mapping = NULL,   data = NULL,   geom = \"path_interpolate\",   position = \"identity\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   n = 100,   strength = 0.5,   inherit.aes = TRUE,   ... )  geom_diagonal2(   mapping = NULL,   data = NULL,   stat = \"diagonal2\",   position = \"identity\",   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   n = 100,   strength = 0.5,   ... )  stat_diagonal0(   mapping = NULL,   data = NULL,   geom = \"bezier0\",   position = \"identity\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   strength = 0.5,   ... )  geom_diagonal0(   mapping = NULL,   data = NULL,   stat = \"diagonal0\",   position = \"identity\",   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   strength = 0.5,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw horizontal diagonals — geom_diagonal","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. n number points create segment strength proportion move control point along x-axis towards end bezier curve na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. arrow Arrow specification, created grid::arrow(). lineend Line end style (round, butt, square).","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Draw horizontal diagonals — geom_diagonal","text":"geom_diagonal geom_diagonal0 understand following aesthetics (required aesthetics bold): x y xend yend color linewidth linetype alpha lineend geom_diagonal2 understand following aesthetics (required aesthetics bold): x y group color linewidth linetype alpha lineend","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Draw horizontal diagonals — geom_diagonal","text":"x, y interpolated point coordinates index progression along interpolation mapped 0 1","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal.html","id":"orientation","dir":"Reference","previous_headings":"","what":"Orientation","title":"Draw horizontal diagonals — geom_diagonal","text":"geom treats axis differently , thus, can thus two orientations. Often orientation easy deduce combination given mappings types positional scales use. Thus, ggplot2 default try guess orientation layer . rare circumstances, orientation ambiguous guessing may fail. case orientation can specified directly using orientation parameter, can either \"x\" \"y\". value gives axis geom run along, \"x\" default orientation expect geom.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw horizontal diagonals — geom_diagonal","text":"","code":"data <- data.frame(   x = rep(0, 10),   y = 1:10,   xend = 1:10,   yend = 2:11 )  ggplot(data) +   geom_diagonal(aes(x, y, xend = xend, yend = yend))   # The standard version provides an index to create gradients ggplot(data) +   geom_diagonal(aes(x, y, xend = xend, yend = yend, alpha = after_stat(index)))   # The 0 version uses bezierGrob under the hood for an approximation ggplot(data) +   geom_diagonal0(aes(x, y, xend = xend, yend = yend))   # The 2 version allows you to interpolate between endpoint aesthetics data2 <- data.frame(   x = c(data$x, data$xend),   y = c(data$y, data$yend),   group = rep(1:10, 2),   colour = sample(letters[1:5], 20, TRUE) ) ggplot(data2) +   geom_diagonal2(aes(x, y, group = group, colour = colour))   # Use strength to control the steepness of the central region ggplot(data, aes(x, y, xend = xend, yend = yend)) +   geom_diagonal(strength = 0.75, colour = 'red') +   geom_diagonal(strength = 0.25, colour = 'blue')"},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal_wide.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw an area defined by an upper and lower diagonal — geom_diagonal_wide","title":"Draw an area defined by an upper and lower diagonal — geom_diagonal_wide","text":"geom_diagonal_wide() function draws thick diagonal, , polygon confined lower upper diagonal. geom bidirectional direction can controlled orientation argument.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal_wide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw an area defined by an upper and lower diagonal — geom_diagonal_wide","text":"","code":"stat_diagonal_wide(   mapping = NULL,   data = NULL,   geom = \"shape\",   position = \"identity\",   n = 100,   strength = 0.5,   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_diagonal_wide(   mapping = NULL,   data = NULL,   stat = \"diagonal_wide\",   position = \"identity\",   n = 100,   na.rm = FALSE,   orientation = NA,   strength = 0.5,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal_wide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw an area defined by an upper and lower diagonal — geom_diagonal_wide","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. n number points create bounding diagonals strength proportion move control point along x-axis towards end bezier curve na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal_wide.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Draw an area defined by an upper and lower diagonal — geom_diagonal_wide","text":"geom_diagonal_wide understand following aesthetics (required aesthetics bold): x y group color linewidth linetype alpha lineend","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal_wide.html","id":"orientation","dir":"Reference","previous_headings":"","what":"Orientation","title":"Draw an area defined by an upper and lower diagonal — geom_diagonal_wide","text":"geom treats axis differently , thus, can thus two orientations. Often orientation easy deduce combination given mappings types positional scales use. Thus, ggplot2 default try guess orientation layer . rare circumstances, orientation ambiguous guessing may fail. case orientation can specified directly using orientation parameter, can either \"x\" \"y\". value gives axis geom run along, \"x\" default orientation expect geom.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_diagonal_wide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw an area defined by an upper and lower diagonal — geom_diagonal_wide","text":"","code":"data <- data.frame(   x = c(1, 2, 2, 1, 2, 3, 3, 2),   y = c(1, 2, 3, 2, 3, 1, 2, 5),   group = c(1, 1, 1, 1, 2, 2, 2, 2) )  ggplot(data) +   geom_diagonal_wide(aes(x, y, group = group))   # The strength control the steepness ggplot(data, aes(x, y, group = group)) +   geom_diagonal_wide(strength = 0.75, alpha = 0.5, fill = 'red') +   geom_diagonal_wide(strength = 0.25, alpha = 0.5, fill = 'blue')   # The diagonal_wide geom uses geom_shape under the hood, so corner rounding # etc are all there ggplot(data) +   geom_diagonal_wide(aes(x, y, group = group), radius = unit(5, 'mm'))"},{"path":"https://ggforce.data-imaginist.com/reference/geom_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw (super)ellipses based on the coordinate system scale — geom_ellipse","title":"Draw (super)ellipses based on the coordinate system scale — geom_ellipse","text":"generalisation geom_circle() allows draw ellipses specified angle center relative coordinate system. Apart letting draw regular ellipsis, stat using generalised formula superellipses can utilised setting m1 m2 aesthetics. set m1 m2 value follow ensure symmetric appearance.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw (super)ellipses based on the coordinate system scale — geom_ellipse","text":"","code":"stat_ellip(   mapping = NULL,   data = NULL,   geom = \"circle\",   position = \"identity\",   n = 360,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_ellipse(   mapping = NULL,   data = NULL,   stat = \"ellip\",   position = \"identity\",   n = 360,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw (super)ellipses based on the coordinate system scale — geom_ellipse","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. n number points sample along ellipse. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_ellipse.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Draw (super)ellipses based on the coordinate system scale — geom_ellipse","text":"geom_arc understand following aesthetics (required aesthetics bold): x0 y0 b angle m1 m2 color fill linewidth linetype alpha lineend","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_ellipse.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Draw (super)ellipses based on the coordinate system scale — geom_ellipse","text":"x, y coordinates points along ellipse","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw (super)ellipses based on the coordinate system scale — geom_ellipse","text":"","code":"# Basic usage ggplot() +   geom_ellipse(aes(x0 = 0, y0 = 0, a = 10, b = 3, angle = 0)) +   coord_fixed()   # Rotation # Note that it expects radians and rotates the ellipse counter-clockwise ggplot() +   geom_ellipse(aes(x0 = 0, y0 = 0, a = 10, b = 3, angle = pi / 4)) +   coord_fixed()   # Draw a super ellipse ggplot() +   geom_ellipse(aes(x0 = 0, y0 = 0, a = 6, b = 3, angle = -pi / 3, m1 = 3)) +   coord_fixed()"},{"path":"https://ggforce.data-imaginist.com/reference/geom_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Link points with paths — geom_link","title":"Link points with paths — geom_link","text":"set geoms makes possible connect points using straight lines. think ggplot2::geom_segment() ggplot2::geom_path(), functions additional tricks sleeves. geom_link connects two points way ggplot2::geom_segment() interpolating multiple points two. additional column called index added data sequential progression interpolated points. can used map color size direction link. geom_link2 uses syntax ggplot2::geom_path() interpolates aesthetics given row data.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Link points with paths — geom_link","text":"","code":"stat_link(   mapping = NULL,   data = NULL,   geom = \"path\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   n = 100,   inherit.aes = TRUE,   ... )  stat_link2(   mapping = NULL,   data = NULL,   geom = \"path_interpolate\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   n = 100,   inherit.aes = TRUE,   ... )  geom_link(   mapping = NULL,   data = NULL,   stat = \"link\",   position = \"identity\",   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   n = 100,   ... )  geom_link2(   mapping = NULL,   data = NULL,   stat = \"link2\",   position = \"identity\",   arrow = NULL,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   n = 100,   ... )  geom_link0(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow = NULL,   arrow.fill = NULL,   lineend = \"butt\",   linejoin = \"round\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Link points with paths — geom_link","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. n number points create segment inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. arrow Arrow specification, created grid::arrow(). lineend Line end style (round, butt, square). arrow.fill fill colour use arrow head (closed). NULL means use colour aesthetic. linejoin Line join style (round, mitre, bevel).","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_link.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Link points with paths — geom_link","text":"geom_link understand following aesthetics (required aesthetics bold): x y xend yend color size linetype alpha lineend geom_link2 understand following aesthetics (required aesthetics bold): x y color size linetype alpha lineend","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_link.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Link points with paths — geom_link","text":"x, y interpolated point coordinates index progression along interpolation mapped 0 1","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Link points with paths — geom_link","text":"","code":"# Lets make some data lines <- data.frame(   x = c(5, 12, 15, 9, 6),   y = c(17, 20, 4, 15, 5),   xend = c(19, 17, 2, 9, 5),   yend = c(10, 18, 7, 12, 1),   width = c(1, 10, 6, 2, 3),   colour = letters[1:5] )  ggplot(lines) +   geom_link(aes(x = x, y = y, xend = xend, yend = yend, colour = colour,                 alpha = stat(index), size = after_stat(index))) #> Warning: `stat(index)` was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(index)` instead.   ggplot(lines) +   geom_link2(aes(x = x, y = y, colour = colour, size = width, group = 1),              lineend = 'round', n = 500)   # geom_link0 is simply an alias for geom_segment to put the link geoms in # line with the other line geoms with multiple versions. `index` is not # available here ggplot(lines) +   geom_link0(aes(x = x, y = y, xend = xend, yend = yend, colour = colour))"},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate areas with circles — geom_mark_circle","title":"Annotate areas with circles — geom_mark_circle","text":"geom lets annotate sets points via circles. enclosing circles calculated draw time optimal enclosure given aspect ratio thus guaranteed. geom_mark_* geoms enclosure inherits geom_shape() defaults expanded slightly better enclose points.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate areas with circles — geom_mark_circle","text":"","code":"geom_mark_circle(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   expand = unit(5, \"mm\"),   radius = expand,   n = 100,   label.margin = margin(2, 2, 2, 2, \"mm\"),   label.width = NULL,   label.minwidth = unit(50, \"mm\"),   label.hjust = 0,   label.fontsize = 12,   label.family = \"\",   label.lineheight = 1,   label.fontface = c(\"bold\", \"plain\"),   label.fill = \"white\",   label.colour = \"black\",   label.buffer = unit(10, \"mm\"),   con.colour = \"black\",   con.size = 0.5,   con.type = \"elbow\",   con.linetype = 1,   con.border = \"one\",   con.cap = unit(3, \"mm\"),   con.arrow = NULL,   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate areas with circles — geom_mark_circle","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. expand numeric unit vector length one, specifying expansion amount. Negative values result contraction instead. value given numeric understood proportion plot area width. radius expand specifying corner radius. n number points used draw circle. Defaults 100. label.margin margin around annotation boxes, given call ggplot2::margin(). label.width fixed width label. Set NULL let text label.minwidth decide. label.minwidth minimum width provide description. size label exceeds , description allowed fill much label. label.hjust horizontal justification annotation. contains two elements first used label second description. label.fontsize size text annotation. contains two elements first used label second description. label.family font family used annotation. contains two elements first used label second description. label.lineheight height line multipler fontsize. contains two elements first used label second description. label.fontface font face used annotation. contains two elements first used label second description. label.fill fill colour annotation box. Use \"inherit\" use fill enclosure \"inherit_col\" use border colour enclosure. label.colour text colour annotation. contains two elements first used label second description. Use \"inherit\" use border colour enclosure \"inherit_fill\" use fill colour enclosure. label.buffer size region around mark labels placed. con.colour colour line connecting annotation mark. Use \"inherit\" use border colour enclosure \"inherit_fill\" use fill colour enclosure. con.size width connector. Use \"inherit\" use border width enclosure. con.type type connector. Either \"elbow\", \"straight\", \"none\". con.linetype linetype connector. Use \"inherit\" use border linetype enclosure. con.border bordertype connector. Either \"one\" (draw line horizontal side closest mark), \"\" (draw border sides), \"none\" (going explain one). con.cap distance mark line stop . con.arrow arrow specification connection using grid::arrow() end pointing towards mark. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_circle.html","id":"annotation","dir":"Reference","previous_headings":"","what":"Annotation","title":"Annotate areas with circles — geom_mark_circle","text":"geom_mark_* allow put descriptive textboxes connected mark plot, using label description aesthetics. textboxes automatically placed close mark, without obscuring datapoints layer. placement dynamic resize plot see annotation might move around areas become big enough small fit annotation. enough space annotation without overlapping data get drawn. cases try resizing plot, change size annotation, decrease buffer region around marks.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_circle.html","id":"filtering","dir":"Reference","previous_headings":"","what":"Filtering","title":"Annotate areas with circles — geom_mark_circle","text":"Often marks used draw attention , annotate specific features plot thus desirable marks around everything. possible simply pre-filter data used mark layer, geom_mark_* geoms also comes dedicated filter aesthetic , set, remove rows evalutates FALSE. multiple benefits using instead prefiltering. First, change data source, making code adaptable exploration. Second, data removed filter aesthetic remembered geom, annotation take care overlap removed data.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_circle.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Annotate areas with circles — geom_mark_circle","text":"geom_mark_circle understand following aesthetics (required aesthetics bold): x y x0 (used anchor label) y0 (used anchor label) filter label description color fill group size linetype alpha","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_circle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate areas with circles — geom_mark_circle","text":"","code":"ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_circle(aes(fill = Species, filter = Species != 'versicolor')) +   geom_point()   # Add annotation ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_circle(aes(fill = Species, label = Species)) +   geom_point()   # Long descriptions are automatically wrapped to fit into the width iris$desc <- c(   'A super Iris - and it knows it',   'Pretty mediocre Iris, but give it a couple of years and it might surprise you',   \"You'll never guess what this Iris does every Sunday\" )[iris$Species]  ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_circle(aes(fill = Species, label = Species, description = desc,                        filter = Species == 'setosa')) +   geom_point()   # Change the buffer size to move labels farther away (or closer) from the # marks ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_circle(aes(fill = Species, label = Species),                    label.buffer = unit(30, 'mm')) +   geom_point()   # The connector is capped a bit before it reaches the mark, but this can be # controlled ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_circle(aes(fill = Species, label = Species),                    con.cap = 0) +   geom_point()   # If you want to use the scaled colours for the labels or connectors you can # use the \"inherit\" keyword instead ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_circle(aes(fill = Species, label = Species),                    label.fill = \"inherit\") +   geom_point()"},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_ellipse.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate areas with ellipses — geom_mark_ellipse","title":"Annotate areas with ellipses — geom_mark_ellipse","text":"geom lets annotate sets points via ellipses. enclosing ellipses estimated using Khachiyan algorithm guarantees optimal solution within given tolerance level. geom often expanded lesser concern points slightly outside ellipsis. Khachiyan algorithm polynomial complexity can thus suffer scaling issues. Still, calculated convex hull groups, performance issues rare (can easily handle hull consisting 1000 points).","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_ellipse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate areas with ellipses — geom_mark_ellipse","text":"","code":"geom_mark_ellipse(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   expand = unit(5, \"mm\"),   radius = expand,   n = 100,   tol = 0.01,   label.margin = margin(2, 2, 2, 2, \"mm\"),   label.width = NULL,   label.minwidth = unit(50, \"mm\"),   label.hjust = 0,   label.fontsize = 12,   label.family = \"\",   label.lineheight = 1,   label.fontface = c(\"bold\", \"plain\"),   label.fill = \"white\",   label.colour = \"black\",   label.buffer = unit(10, \"mm\"),   con.colour = \"black\",   con.size = 0.5,   con.type = \"elbow\",   con.linetype = 1,   con.border = \"one\",   con.cap = unit(3, \"mm\"),   con.arrow = NULL,   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_ellipse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate areas with ellipses — geom_mark_ellipse","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. expand numeric unit vector length one, specifying expansion amount. Negative values result contraction instead. value given numeric understood proportion plot area width. radius expand specifying corner radius. n number points used draw ellipse. Defaults 100. tol tolerance cutoff. Lower values result ellipses closer optimal solution. Defaults 0.01. label.margin margin around annotation boxes, given call ggplot2::margin(). label.width fixed width label. Set NULL let text label.minwidth decide. label.minwidth minimum width provide description. size label exceeds , description allowed fill much label. label.hjust horizontal justification annotation. contains two elements first used label second description. label.fontsize size text annotation. contains two elements first used label second description. label.family font family used annotation. contains two elements first used label second description. label.lineheight height line multipler fontsize. contains two elements first used label second description. label.fontface font face used annotation. contains two elements first used label second description. label.fill fill colour annotation box. Use \"inherit\" use fill enclosure \"inherit_col\" use border colour enclosure. label.colour text colour annotation. contains two elements first used label second description. Use \"inherit\" use border colour enclosure \"inherit_fill\" use fill colour enclosure. label.buffer size region around mark labels placed. con.colour colour line connecting annotation mark. Use \"inherit\" use border colour enclosure \"inherit_fill\" use fill colour enclosure. con.size width connector. Use \"inherit\" use border width enclosure. con.type type connector. Either \"elbow\", \"straight\", \"none\". con.linetype linetype connector. Use \"inherit\" use border linetype enclosure. con.border bordertype connector. Either \"one\" (draw line horizontal side closest mark), \"\" (draw border sides), \"none\" (going explain one). con.cap distance mark line stop . con.arrow arrow specification connection using grid::arrow() end pointing towards mark. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_ellipse.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Annotate areas with ellipses — geom_mark_ellipse","text":"geom_mark_ellipse understands following aesthetics (required aesthetics bold): x y x0 (used anchor label) y0 (used anchor label) filter label description color fill group size linetype alpha","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_ellipse.html","id":"annotation","dir":"Reference","previous_headings":"","what":"Annotation","title":"Annotate areas with ellipses — geom_mark_ellipse","text":"geom_mark_* allow put descriptive textboxes connected mark plot, using label description aesthetics. textboxes automatically placed close mark, without obscuring datapoints layer. placement dynamic resize plot see annotation might move around areas become big enough small fit annotation. enough space annotation without overlapping data get drawn. cases try resizing plot, change size annotation, decrease buffer region around marks.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_ellipse.html","id":"filtering","dir":"Reference","previous_headings":"","what":"Filtering","title":"Annotate areas with ellipses — geom_mark_ellipse","text":"Often marks used draw attention , annotate specific features plot thus desirable marks around everything. possible simply pre-filter data used mark layer, geom_mark_* geoms also comes dedicated filter aesthetic , set, remove rows evalutates FALSE. multiple benefits using instead prefiltering. First, change data source, making code adaptable exploration. Second, data removed filter aesthetic remembered geom, annotation take care overlap removed data.","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_ellipse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate areas with ellipses — geom_mark_ellipse","text":"","code":"ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_ellipse(aes(fill = Species, filter = Species != 'versicolor')) +   geom_point()   # Add annotation ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_ellipse(aes(fill = Species, label = Species)) +   geom_point()   # Long descriptions are automatically wrapped to fit into the width iris$desc <- c(   'A super Iris - and it knows it',   'Pretty mediocre Iris, but give it a couple of years and it might surprise you',   \"You'll never guess what this Iris does every Sunday\" )[iris$Species]  ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_ellipse(aes(fill = Species, label = Species, description = desc,                         filter = Species == 'setosa')) +   geom_point()   # Change the buffer size to move labels farther away (or closer) from the # marks ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_ellipse(aes(fill = Species, label = Species),                     label.buffer = unit(40, 'mm')) +   geom_point()   # The connector is capped a bit before it reaches the mark, but this can be # controlled ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_ellipse(aes(fill = Species, label = Species),                     con.cap = 0) +   geom_point()   # If you want to use the scaled colours for the labels or connectors you can # use the \"inherit\" keyword instead ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_ellipse(aes(fill = Species, label = Species),                     label.fill = \"inherit\") +   geom_point()"},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_hull.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate areas with hulls — geom_mark_hull","title":"Annotate areas with hulls — geom_mark_hull","text":"geom lets annotate sets points via hulls. convex hulls common due clear definition, can lead large areas covered contain points. Due geom_mark_hull uses concaveman lets adjust concavity resulting hull. hull calculated draw time, can thus change resize plot. order clearly contain points, aesthetic purpose resulting hull expanded 5mm rounded corners. can adjusted expand radius parameters.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_hull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate areas with hulls — geom_mark_hull","text":"","code":"geom_mark_hull(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   expand = unit(5, \"mm\"),   radius = unit(2.5, \"mm\"),   concavity = 2,   label.margin = margin(2, 2, 2, 2, \"mm\"),   label.width = NULL,   label.minwidth = unit(50, \"mm\"),   label.hjust = 0,   label.fontsize = 12,   label.family = \"\",   label.lineheight = 1,   label.fontface = c(\"bold\", \"plain\"),   label.fill = \"white\",   label.colour = \"black\",   label.buffer = unit(10, \"mm\"),   con.colour = \"black\",   con.size = 0.5,   con.type = \"elbow\",   con.linetype = 1,   con.border = \"one\",   con.cap = unit(3, \"mm\"),   con.arrow = NULL,   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_hull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate areas with hulls — geom_mark_hull","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. expand numeric unit vector length one, specifying expansion amount. Negative values result contraction instead. value given numeric understood proportion plot area width. radius expand specifying corner radius. concavity measure concavity hull. 1 concave approaches convex grows. Defaults 2. label.margin margin around annotation boxes, given call ggplot2::margin(). label.width fixed width label. Set NULL let text label.minwidth decide. label.minwidth minimum width provide description. size label exceeds , description allowed fill much label. label.hjust horizontal justification annotation. contains two elements first used label second description. label.fontsize size text annotation. contains two elements first used label second description. label.family font family used annotation. contains two elements first used label second description. label.lineheight height line multipler fontsize. contains two elements first used label second description. label.fontface font face used annotation. contains two elements first used label second description. label.fill fill colour annotation box. Use \"inherit\" use fill enclosure \"inherit_col\" use border colour enclosure. label.colour text colour annotation. contains two elements first used label second description. Use \"inherit\" use border colour enclosure \"inherit_fill\" use fill colour enclosure. label.buffer size region around mark labels placed. con.colour colour line connecting annotation mark. Use \"inherit\" use border colour enclosure \"inherit_fill\" use fill colour enclosure. con.size width connector. Use \"inherit\" use border width enclosure. con.type type connector. Either \"elbow\", \"straight\", \"none\". con.linetype linetype connector. Use \"inherit\" use border linetype enclosure. con.border bordertype connector. Either \"one\" (draw line horizontal side closest mark), \"\" (draw border sides), \"none\" (going explain one). con.cap distance mark line stop . con.arrow arrow specification connection using grid::arrow() end pointing towards mark. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_hull.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Annotate areas with hulls — geom_mark_hull","text":"geom_mark_hull understand following aesthetics (required aesthetics bold): x y x0 (used anchor label) y0 (used anchor label) filter label description color fill group size linetype alpha","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_hull.html","id":"annotation","dir":"Reference","previous_headings":"","what":"Annotation","title":"Annotate areas with hulls — geom_mark_hull","text":"geom_mark_* allow put descriptive textboxes connected mark plot, using label description aesthetics. textboxes automatically placed close mark, without obscuring datapoints layer. placement dynamic resize plot see annotation might move around areas become big enough small fit annotation. enough space annotation without overlapping data get drawn. cases try resizing plot, change size annotation, decrease buffer region around marks.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_hull.html","id":"filtering","dir":"Reference","previous_headings":"","what":"Filtering","title":"Annotate areas with hulls — geom_mark_hull","text":"Often marks used draw attention , annotate specific features plot thus desirable marks around everything. possible simply pre-filter data used mark layer, geom_mark_* geoms also comes dedicated filter aesthetic , set, remove rows evalutates FALSE. multiple benefits using instead prefiltering. First, change data source, making code adaptable exploration. Second, data removed filter aesthetic remembered geom, annotation take care overlap removed data.","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_hull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate areas with hulls — geom_mark_hull","text":"","code":"ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_hull(aes(fill = Species, filter = Species != 'versicolor')) +   geom_point()   # Adjusting the concavity lets you change the shape of the hull ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_hull(aes(fill = Species, filter = Species != 'versicolor'),     concavity = 1   ) +   geom_point()   ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_hull(aes(fill = Species, filter = Species != 'versicolor'),     concavity = 10   ) +   geom_point()   # Add annotation ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_hull(aes(fill = Species, label = Species)) +   geom_point()   # Long descriptions are automatically wrapped to fit into the width iris$desc <- c(   'A super Iris - and it knows it',   'Pretty mediocre Iris, but give it a couple of years and it might surprise you',   \"You'll never guess what this Iris does every Sunday\" )[iris$Species]  ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_hull(aes(fill = Species, label = Species, description = desc,                      filter = Species == 'setosa')) +   geom_point()   # Change the buffer size to move labels farther away (or closer) from the # marks ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_hull(aes(fill = Species, label = Species),                  label.buffer = unit(40, 'mm')) +   geom_point()   # The connector is capped a bit before it reaches the mark, but this can be # controlled ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_hull(aes(fill = Species, label = Species),                  con.cap = 0) +   geom_point()   # If you want to use the scaled colours for the labels or connectors you can # use the \"inherit\" keyword instead ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_hull(aes(fill = Species, label = Species),                  label.fill = \"inherit\") +   geom_point()"},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_rect.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate areas with rectangles — geom_mark_rect","title":"Annotate areas with rectangles — geom_mark_rect","text":"geom lets annotate sets points via rectangles. rectangles simply scaled range data geom_mark_*() geoms expanded rounded corners.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_rect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate areas with rectangles — geom_mark_rect","text":"","code":"geom_mark_rect(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   expand = unit(5, \"mm\"),   radius = unit(2.5, \"mm\"),   label.margin = margin(2, 2, 2, 2, \"mm\"),   label.width = NULL,   label.minwidth = unit(50, \"mm\"),   label.hjust = 0,   label.fontsize = 12,   label.family = \"\",   label.lineheight = 1,   label.fontface = c(\"bold\", \"plain\"),   label.fill = \"white\",   label.colour = \"black\",   label.buffer = unit(10, \"mm\"),   con.colour = \"black\",   con.size = 0.5,   con.type = \"elbow\",   con.linetype = 1,   con.border = \"one\",   con.cap = unit(3, \"mm\"),   con.arrow = NULL,   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_rect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate areas with rectangles — geom_mark_rect","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. expand numeric unit vector length one, specifying expansion amount. Negative values result contraction instead. value given numeric understood proportion plot area width. radius expand specifying corner radius. label.margin margin around annotation boxes, given call ggplot2::margin(). label.width fixed width label. Set NULL let text label.minwidth decide. label.minwidth minimum width provide description. size label exceeds , description allowed fill much label. label.hjust horizontal justification annotation. contains two elements first used label second description. label.fontsize size text annotation. contains two elements first used label second description. label.family font family used annotation. contains two elements first used label second description. label.lineheight height line multipler fontsize. contains two elements first used label second description. label.fontface font face used annotation. contains two elements first used label second description. label.fill fill colour annotation box. Use \"inherit\" use fill enclosure \"inherit_col\" use border colour enclosure. label.colour text colour annotation. contains two elements first used label second description. Use \"inherit\" use border colour enclosure \"inherit_fill\" use fill colour enclosure. label.buffer size region around mark labels placed. con.colour colour line connecting annotation mark. Use \"inherit\" use border colour enclosure \"inherit_fill\" use fill colour enclosure. con.size width connector. Use \"inherit\" use border width enclosure. con.type type connector. Either \"elbow\", \"straight\", \"none\". con.linetype linetype connector. Use \"inherit\" use border linetype enclosure. con.border bordertype connector. Either \"one\" (draw line horizontal side closest mark), \"\" (draw border sides), \"none\" (going explain one). con.cap distance mark line stop . con.arrow arrow specification connection using grid::arrow() end pointing towards mark. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_rect.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Annotate areas with rectangles — geom_mark_rect","text":"geom_mark_rect understands following aesthetics (required aesthetics bold): x y x0 (used anchor label) y0 (used anchor label) filter label description color fill group size linetype alpha","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_rect.html","id":"annotation","dir":"Reference","previous_headings":"","what":"Annotation","title":"Annotate areas with rectangles — geom_mark_rect","text":"geom_mark_* allow put descriptive textboxes connected mark plot, using label description aesthetics. textboxes automatically placed close mark, without obscuring datapoints layer. placement dynamic resize plot see annotation might move around areas become big enough small fit annotation. enough space annotation without overlapping data get drawn. cases try resizing plot, change size annotation, decrease buffer region around marks.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_rect.html","id":"filtering","dir":"Reference","previous_headings":"","what":"Filtering","title":"Annotate areas with rectangles — geom_mark_rect","text":"Often marks used draw attention , annotate specific features plot thus desirable marks around everything. possible simply pre-filter data used mark layer, geom_mark_* geoms also comes dedicated filter aesthetic , set, remove rows evalutates FALSE. multiple benefits using instead prefiltering. First, change data source, making code adaptable exploration. Second, data removed filter aesthetic remembered geom, annotation take care overlap removed data.","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/geom_mark_rect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annotate areas with rectangles — geom_mark_rect","text":"","code":"ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_rect(aes(fill = Species, filter = Species != 'versicolor')) +   geom_point()   # Add annotation ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_rect(aes(fill = Species, label = Species)) +   geom_point()   # Long descriptions are automatically wrapped to fit into the width iris$desc <- c(   'A super Iris - and it knows it',   'Pretty mediocre Iris, but give it a couple of years and it might surprise you',   \"You'll never guess what this Iris does every Sunday\" )[iris$Species]  ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_rect(aes(fill = Species, label = Species, description = desc,                      filter = Species == 'setosa')) +   geom_point()   # Change the buffer size to move labels farther away (or closer) from the # marks ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_rect(aes(fill = Species, label = Species),                  label.buffer = unit(30, 'mm')) +   geom_point()   # The connector is capped a bit before it reaches the mark, but this can be # controlled ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_rect(aes(fill = Species, label = Species),                  con.cap = 0) +   geom_point()   # If you want to use the scaled colours for the labels or connectors you can # use the \"inherit\" keyword instead ggplot(iris, aes(Petal.Length, Petal.Width)) +   geom_mark_rect(aes(fill = Species, label = Species),                  label.fill = \"inherit\") +   geom_point()"},{"path":"https://ggforce.data-imaginist.com/reference/geom_parallel_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Parallel Sets diagrams — geom_parallel_sets","title":"Create Parallel Sets diagrams — geom_parallel_sets","text":"parallel sets diagram type visualisation showing interaction multiple categorical variables. variables intrinsic order representation can thought Sankey Diagram. variable point time resemble alluvial diagram.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_parallel_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Parallel Sets diagrams — geom_parallel_sets","text":"","code":"stat_parallel_sets(   mapping = NULL,   data = NULL,   geom = \"shape\",   position = \"identity\",   n = 100,   strength = 0.5,   sep = 0.05,   axis.width = 0,   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_parallel_sets(   mapping = NULL,   data = NULL,   stat = \"parallel_sets\",   position = \"identity\",   n = 100,   na.rm = FALSE,   orientation = NA,   sep = 0.05,   strength = 0.5,   axis.width = 0,   show.legend = NA,   inherit.aes = TRUE,   ... )  stat_parallel_sets_axes(   mapping = NULL,   data = NULL,   geom = \"parallel_sets_axes\",   position = \"identity\",   sep = 0.05,   axis.width = 0,   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_parallel_sets_axes(   mapping = NULL,   data = NULL,   stat = \"parallel_sets_axes\",   position = \"identity\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_parallel_sets_labels(   mapping = NULL,   data = NULL,   stat = \"parallel_sets_axes\",   angle = -90,   nudge_x = 0,   nudge_y = 0,   position = \"identity\",   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_parallel_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Parallel Sets diagrams — geom_parallel_sets","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. n number points create bounding diagonals strength proportion move control point along x-axis towards end bezier curve sep proportional separation categories within variable axis.width width area around variable axis na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. angle angle axis label text nudge_x, nudge_y Horizontal vertical adjustment nudge labels . Useful offsetting text category segments.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_parallel_sets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Parallel Sets diagrams — geom_parallel_sets","text":"parallel sets visualization categorical variable assigned position x-axis. size intersection categories neighboring variables shown thick diagonals, scaled sum elements shared two categories. natural data representation plot categorical variable separate column column giving amount/magnitude combination levels row. representation unfortunately fitting ggplot2 API needs every position encoding column. make easier work ggforce provides helper gather_set_data(), takes care transformation.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_parallel_sets.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Create Parallel Sets diagrams — geom_parallel_sets","text":"geom_parallel_sets understand following aesthetics (required aesthetics bold): x|y id split value color fill size linetype alpha lineend","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_parallel_sets.html","id":"orientation","dir":"Reference","previous_headings":"","what":"Orientation","title":"Create Parallel Sets diagrams — geom_parallel_sets","text":"geom treats axis differently , thus, can thus two orientations. Often orientation easy deduce combination given mappings types positional scales use. Thus, ggplot2 default try guess orientation layer . rare circumstances, orientation ambiguous guessing may fail. case orientation can specified directly using orientation parameter, can either \"x\" \"y\". value gives axis geom run along, \"x\" default orientation expect geom.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_parallel_sets.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Parallel Sets diagrams — geom_parallel_sets","text":"Thomas Lin Pedersen","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_parallel_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Parallel Sets diagrams — geom_parallel_sets","text":"","code":"data <- reshape2::melt(Titanic) data <- gather_set_data(data, 1:4)  ggplot(data, aes(x, id = id, split = y, value = value)) +   geom_parallel_sets(aes(fill = Sex), alpha = 0.3, axis.width = 0.1) +   geom_parallel_sets_axes(axis.width = 0.1) +   geom_parallel_sets_labels(colour = 'white')   # Use nudge_x to offset and hjust = 0 to left-justify label ggplot(data, aes(x, id = id, split = y, value = value)) +   geom_parallel_sets(aes(fill = Sex), alpha = 0.3, axis.width = 0.1) +   geom_parallel_sets_axes(axis.width = 0.1) +   geom_parallel_sets_labels(colour = 'red', angle = 0, nudge_x = 0.1, hjust = 0)"},{"path":"https://ggforce.data-imaginist.com/reference/geom_regon.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw regular polygons by specifying number of sides — geom_regon","title":"Draw regular polygons by specifying number of sides — geom_regon","text":"geom makes easy construct regular polygons (polygons sides angles equal) specifying number sides, position, size. polygons always rotated \"rest\" flat side, can changed angle aesthetic. size based radius circumcircle thus proportional area.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_regon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw regular polygons by specifying number of sides — geom_regon","text":"","code":"stat_regon(   mapping = NULL,   data = NULL,   geom = \"shape\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_regon(   mapping = NULL,   data = NULL,   stat = \"regon\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_regon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw regular polygons by specifying number of sides — geom_regon","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_regon.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Draw regular polygons by specifying number of sides — geom_regon","text":"geom_regon understand following aesthetics (required aesthetics bold): x0 x coordinate y0 y coordinate sides number sides regon r ratio regon respect plot angle regon rotation angle (unit radian) color fill size linetype alpha lineend","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_regon.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Draw regular polygons by specifying number of sides — geom_regon","text":"x, y coordinates corners polygon","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_regon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw regular polygons by specifying number of sides — geom_regon","text":"","code":"ggplot() +   geom_regon(aes(x0 = runif(8), y0 = runif(8), sides = sample(3:10, 8),                  angle = 0, r = runif(8) / 10)) +   coord_fixed()   # The polygons are drawn with geom_shape, so can be manipulated as such ggplot() +   geom_regon(aes(x0 = runif(8), y0 = runif(8), sides = sample(3:10, 8),                  angle = 0, r = runif(8) / 10),              expand = unit(1, 'cm'), radius = unit(1, 'cm')) +   coord_fixed()"},{"path":"https://ggforce.data-imaginist.com/reference/geom_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw polygons with expansion/contraction and/or rounded corners — geom_shape","title":"Draw polygons with expansion/contraction and/or rounded corners — geom_shape","text":"geom cousin ggplot2::geom_polygon() added possibility expanding contracting polygon absolute amount (e.g. 1 cm). Furthermore, possible round corners polygon, absolute amount. resulting geom reacts resizing plot, expansion/contraction corner radius get distorted. expansion/contraction corner radius specified, geom falls back geom_polygon performance penality using instead geom_polygon.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw polygons with expansion/contraction and/or rounded corners — geom_shape","text":"","code":"geom_shape(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   expand = 0,   radius = 0,   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw polygons with expansion/contraction and/or rounded corners — geom_shape","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. expand numeric unit vector length one, specifying expansion amount. Negative values result contraction instead. value given numeric understood proportion plot area width. radius expand specifying corner radius. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_shape.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Draw polygons with expansion/contraction and/or rounded corners — geom_shape","text":"settings can result dissappearance polygons, specifically contracting rounding corners relatively large amount. Also note x y scale limits take expansion account resulting polygon might thus fit plot.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_shape.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Draw polygons with expansion/contraction and/or rounded corners — geom_shape","text":"geom_shape understand following aesthetics (required aesthetics bold): x y color fill group size linetype alpha","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_shape.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw polygons with expansion/contraction and/or rounded corners — geom_shape","text":"Thomas Lin Pedersen","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw polygons with expansion/contraction and/or rounded corners — geom_shape","text":"","code":"shape <- data.frame(   x = c(0.5, 1, 0.75, 0.25, 0),   y = c(0, 0.5, 1, 0.75, 0.25) ) # Expand and round ggplot(shape, aes(x = x, y = y)) +   geom_shape(expand = unit(1, 'cm'), radius = unit(0.5, 'cm')) +   geom_polygon(fill = 'red')   # Contract ggplot(shape, aes(x = x, y = y)) +   geom_polygon(fill = 'red') +   geom_shape(expand = unit(-1, 'cm'))   # Only round corners ggplot(shape, aes(x = x, y = y)) +   geom_polygon(fill = 'red') +   geom_shape(radius = unit(1, 'cm'))"},{"path":"https://ggforce.data-imaginist.com/reference/geom_sina.html","id":null,"dir":"Reference","previous_headings":"","what":"Sina plot — geom_sina","title":"Sina plot — geom_sina","text":"sina plot data visualization chart suitable plotting single variable multiclass dataset. enhanced jitter strip chart, width jitter controlled density distribution data within class.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_sina.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sina plot — geom_sina","text":"","code":"stat_sina(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"dodge\",   scale = \"area\",   method = \"density\",   bw = \"nrd0\",   kernel = \"gaussian\",   maxwidth = NULL,   adjust = 1,   bin_limit = 1,   binwidth = NULL,   bins = NULL,   seed = NA,   jitter_y = TRUE,   ...,   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )  geom_sina(   mapping = NULL,   data = NULL,   stat = \"sina\",   position = \"dodge\",   ...,   na.rm = FALSE,   orientation = NA,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_sina.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sina plot — geom_sina","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. scale sina scaled. Corresponds scale parameter ggplot2::geom_violin()? Available : 'area' scaling largest density/bin among different sinas 'count' , addition scales maximum number points different sinas. 'width' scale according maxwidth parameter backwards compatibility can also logical TRUE meaning area FALSE meaning width method Choose method spread samples within bin along x-axis. Available methods: \"density\", \"counts\" (can abbreviated, e.g. \"d\"). See Details. bw smoothing bandwidth used. numeric, standard deviation smoothing kernel. character, rule choose bandwidth, listed stats::bw.nrd(). Note automatic calculation bandwidth take weights account. kernel Kernel. See list available kernels density(). maxwidth Control maximum width points can spread . Values 0 1. adjust multiplicate bandwidth adjustment. makes possible adjust bandwidth still using bandwidth estimator. example, adjust = 1/2 means use half default bandwidth. bin_limit samples within y-axis bin bin_limit, samples's X coordinates adjusted. binwidth width bins. default use bins bins cover range data. always override value, exploring multiple widths find best illustrate stories data. bins Number bins. Overridden binwidth. Defaults 50. seed seed set jitter ensure reproducible plot jitter_y y integerish banding can occur default jitter values slightly make better distributed. Setting jitter_y = FALSE turns behaviour ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. orientation orientation layer. default (NA) automatically determines orientation aesthetic mapping. rare event fails can given explicitly setting orientation either \"x\" \"y\". See Orientation section detail. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_sina.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sina plot — geom_sina","text":"two available ways define x-axis borders samples spread within: method == \"density\"density kernel estimated along y-axis every sample group, samples spread within curve. effect means points positioned randomly within violin plot parameters. method == \"counts\":borders defined number samples occupy bin.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_sina.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Sina plot — geom_sina","text":"geom_sina understand following aesthetics (required aesthetics bold): x y color group size alpha","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_sina.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Sina plot — geom_sina","text":"density density sample counts per bin point scaled density scaled maximum density group n number points group point belong ","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_sina.html","id":"orientation","dir":"Reference","previous_headings":"","what":"Orientation","title":"Sina plot — geom_sina","text":"geom treats axis differently , thus, can thus two orientations. Often orientation easy deduce combination given mappings types positional scales use. Thus, ggplot2 default try guess orientation layer . rare circumstances, orientation ambiguous guessing may fail. case orientation can specified directly using orientation parameter, can either \"x\" \"y\". value gives axis geom run along, \"x\" default orientation expect geom.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_sina.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sina plot — geom_sina","text":"Nikos Sidiropoulos, Claus Wilke, Thomas Lin Pedersen","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_sina.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sina plot — geom_sina","text":"","code":"ggplot(midwest, aes(state, area)) + geom_point()   # Boxplot and Violin plots convey information on the distribution but not the # number of samples, while Jitter does the opposite. ggplot(midwest, aes(state, area)) +   geom_violin()   ggplot(midwest, aes(state, area)) +   geom_jitter()   # Sina does both! ggplot(midwest, aes(state, area)) +   geom_violin() +   geom_sina()   p <- ggplot(midwest, aes(state, popdensity)) +   scale_y_log10()  p + geom_sina()   # Colour the points based on the data set's columns p + geom_sina(aes(colour = inmetro))   # Or any other way cols <- midwest$popdensity > 10000 p + geom_sina(colour = cols + 1L)   # Sina plots with continuous x: ggplot(midwest, aes(cut_width(area, 0.02), popdensity)) +   geom_sina() +   scale_y_log10()    ### Sample gaussian distributions # Unimodal a <- rnorm(500, 6, 1) b <- rnorm(400, 5, 1.5)  # Bimodal c <- c(rnorm(200, 3, .7), rnorm(50, 7, 0.4))  # Trimodal d <- c(rnorm(200, 2, 0.7), rnorm(300, 5.5, 0.4), rnorm(100, 8, 0.4))  df <- data.frame(   'Distribution' = c(     rep('Unimodal 1', length(a)),     rep('Unimodal 2', length(b)),     rep('Bimodal', length(c)),     rep('Trimodal', length(d))   ),   'Value' = c(a, b, c, d) )  # Reorder levels df$Distribution <- factor(   df$Distribution,   levels(df$Distribution)[c(3, 4, 1, 2)] )  p <- ggplot(df, aes(Distribution, Value)) p + geom_boxplot()  p + geom_violin() +   geom_sina()   # By default, Sina plot scales the width of the class according to the width # of the class with the highest density. Turn group-wise scaling off with: p +   geom_violin() +   geom_sina(scale = FALSE)"},{"path":"https://ggforce.data-imaginist.com/reference/geom_spiro.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw spirograms based on the radii of the different ","title":"Draw spirograms based on the radii of the different ","text":", rather pointless, geom allows draw spirograms, known popular drawing toy lines traced inserting pencil hole small gear trace around inside another gear. potential practicality geom slim excists mainly fun art.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_spiro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw spirograms based on the radii of the different ","text":"","code":"stat_spiro(   mapping = NULL,   data = NULL,   geom = \"path\",   position = \"identity\",   na.rm = FALSE,   n = 500,   revolutions = NULL,   show.legend = NA,   inherit.aes = TRUE,   ... )  geom_spiro(   mapping = NULL,   data = NULL,   stat = \"spiro\",   position = \"identity\",   arrow = NULL,   n = 500,   lineend = \"butt\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/geom_spiro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw spirograms based on the radii of the different ","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. n number points used draw fully closed spirogram. revolutions < 1 actual number points less . revolutions number times inner gear revolve around inside outer gear. NULL number revolutions reach starting position calculated used. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend. stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. arrow Arrow specification, created grid::arrow(). lineend Line end style (round, butt, square).","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_spiro.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Draw spirograms based on the radii of the different ","text":"stat_spiro geom_spiro understand following aesthetics (required aesthetics bold): R r d x0 y0 outer color size linetype alpha","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_spiro.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Draw spirograms based on the radii of the different ","text":"x, y coordinates path describing spirogram index progression along spirogram mapped 0 1","code":""},{"path":"https://ggforce.data-imaginist.com/reference/geom_spiro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw spirograms based on the radii of the different ","text":"","code":"# Basic usage ggplot() +   geom_spiro(aes(R = 10, r = 3, d = 5))   # Only draw a portion ggplot() +   geom_spiro(aes(R = 10, r = 3, d = 5), revolutions = 1.2)   # Let the inner gear circle the outside of the outer gear ggplot() +   geom_spiro(aes(R = 10, r = 3, d = 5, outer = TRUE))"},{"path":"https://ggforce.data-imaginist.com/reference/ggforce-extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"ggforce extensions to ggplot2 — GeomShape","title":"ggforce extensions to ggplot2 — GeomShape","text":"ggforce makes heavy use ggproto class system extend functionality ggplot2. general actual classes little interest users standard ggplot2 api using geom_* stat_* functions building plot encouraged.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/ggforce-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggforce: Accelerating 'ggplot2' — ggforce-package","title":"ggforce: Accelerating 'ggplot2' — ggforce-package","text":"aim 'ggplot2' aid visual data investigations. focus led lack facilities composing specialised plots. 'ggforce' aims collection mainly new stats geoms fills gap. additional functionality aimed come official extension system using 'ggforce' stable experience.","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/ggforce-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggforce: Accelerating 'ggplot2' — ggforce-package","text":"Maintainer: Thomas Lin Pedersen thomasp85@gmail.com (ORCID) contributors: RStudio [copyright holder]","code":""},{"path":"https://ggforce.data-imaginist.com/reference/ggforce-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ggforce: Accelerating 'ggplot2' — ggforce-package","text":"","code":"rocketData <- data.frame(   x = c(1, 1, 2, 2),   y = c(1, 2, 2, 3) ) rocketData <- do.call(rbind, lapply(seq_len(500) - 1, function(i) {   rocketData$y <- rocketData$y - c(0, i / 500)   rocketData$group <- i + 1   rocketData })) rocketData2 <- data.frame(   x = c(2, 2.25, 2),   y = c(2, 2.5, 3) ) rocketData2 <- do.call(rbind, lapply(seq_len(500) - 1, function(i) {   rocketData2$x[2] <- rocketData2$x[2] - i * 0.25 / 500   rocketData2$group <- i + 1 + 500   rocketData2 }))  ggplot() + geom_link(aes(   x = 2, y = 2, xend = 3, yend = 3, alpha = after_stat(index),   size = after_stat(index) ), colour = 'goldenrod', n = 500) +   geom_bezier(aes(x = x, y = y, group = group, colour = after_stat(index)),     data = rocketData   ) +   geom_bezier(aes(x = y, y = x, group = group, colour = after_stat(index)),     data = rocketData   ) +   geom_bezier(aes(x = x, y = y, group = group, colour = 1),     data = rocketData2   ) +   geom_bezier(aes(x = y, y = x, group = group, colour = 1),     data = rocketData2   ) +   geom_text(aes(x = 1.65, y = 1.65, label = 'ggplot2', angle = 45),     colour = 'white', size = 15   ) +   coord_fixed() +   scale_x_reverse() +   scale_y_reverse() +   scale_alpha(range = c(1, 0), guide = 'none') +   scale_size_continuous(     range = c(20, 0.1), trans = 'exp',     guide = 'none'   ) +   scale_color_continuous(guide = 'none') +   xlab('') + ylab('') +   ggtitle('ggforce: Accelerating ggplot2') +   theme(plot.title = element_text(size = 20))"},{"path":"https://ggforce.data-imaginist.com/reference/interpolateDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate layer data — interpolateDataFrame","title":"Interpolate layer data — interpolateDataFrame","text":"Interpolate layer data","code":""},{"path":"https://ggforce.data-imaginist.com/reference/interpolateDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate layer data — interpolateDataFrame","text":"","code":"interpolateDataFrame(data)"},{"path":"https://ggforce.data-imaginist.com/reference/interpolateDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate layer data — interpolateDataFrame","text":"data data.frame data layer","code":""},{"path":"https://ggforce.data-imaginist.com/reference/interpolateDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate layer data — interpolateDataFrame","text":"similar data.frame NA values interpolated","code":""},{"path":"https://ggforce.data-imaginist.com/reference/label_tex.html","id":null,"dir":"Reference","previous_headings":"","what":"A labeller function to parse TeX syntax — label_tex","title":"A labeller function to parse TeX syntax — label_tex","text":"function formats strip labels facet grids wraps contains TeX expressions. latex2exp package must installed.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/label_tex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A labeller function to parse TeX syntax — label_tex","text":"","code":"label_tex(labels, ...)"},{"path":"https://ggforce.data-imaginist.com/reference/label_tex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A labeller function to parse TeX syntax — label_tex","text":"labels Data frame labels. Usually contains one element, faceting multiple factors entails multiple label variables. ... Arguments passed ggplot2::label_parsed multi_line Whether display labels multiple factors separate lines.","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/label_tex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A labeller function to parse TeX syntax — label_tex","text":"","code":"# requires latex2exp package be installed if (requireNamespace(\"latex2exp\", quietly = TRUE)) {   library(ggplot2)   d <- data.frame(x = 1, y = 1, facet = \"$\\\\beta$\")   ggplot(d, aes(x, y)) +     geom_point() +     facet_wrap(~ facet, labeller = label_tex) }"},{"path":"https://ggforce.data-imaginist.com/reference/linear_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a custom linear transformation — linear_trans","title":"Create a custom linear transformation — linear_trans","text":"function lets compose transformations based sequence linear transformations. transformations parameterised parameters become arguments transformation function. transformations one rotate, shear, stretch, translate, reflect.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/linear_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a custom linear transformation — linear_trans","text":"","code":"linear_trans(...)  rotate(angle)  stretch(x, y)  shear(x, y)  translate(x, y)  reflect(x, y)"},{"path":"https://ggforce.data-imaginist.com/reference/linear_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a custom linear transformation — linear_trans","text":"... number transformation functions. angle angle radians x transformation magnitude x-direction y transformation magnitude x-direction","code":""},{"path":"https://ggforce.data-imaginist.com/reference/linear_trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a custom linear transformation — linear_trans","text":"linear_trans creates trans object. functions return 3x3 transformation matrix.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/linear_trans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a custom linear transformation — linear_trans","text":"","code":"trans <- linear_trans(rotate(a), shear(1, 0), translate(x1, y1)) square <- data.frame(x = c(0, 0, 1, 1), y = c(0, 1, 1, 0)) square2 <- trans$transform(square$x, square$y, a = pi / 3, x1 = 4, y1 = 8) square3 <- trans$transform(square$x, square$y, a = pi / 1.5, x1 = 2, y1 = -6) square <- rbind(square, square2, square3) square$group <- rep(1:3, each = 4) ggplot(square, aes(x, y, group = group)) +   geom_polygon(aes(fill = factor(group)), colour = 'black')"},{"path":"https://ggforce.data-imaginist.com/reference/n_pages.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the number of pages in a paginated facet plot — n_pages","title":"Determine the number of pages in a paginated facet plot — n_pages","text":"simple helper returns number pages takes plot panels using facet_wrap_paginate() facet_grid_paginate(). partially builds plot depending complexity plot might take time calculate...","code":""},{"path":"https://ggforce.data-imaginist.com/reference/n_pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the number of pages in a paginated facet plot — n_pages","text":"","code":"n_pages(plot)"},{"path":"https://ggforce.data-imaginist.com/reference/n_pages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the number of pages in a paginated facet plot — n_pages","text":"plot ggplot object using either facet_wrap_paginate facet_grid_paginate","code":""},{"path":"https://ggforce.data-imaginist.com/reference/n_pages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the number of pages in a paginated facet plot — n_pages","text":"plot uses  using either facet_wrap_paginate facet_grid_paginate returns total number pages. Otherwise returns NULL","code":""},{"path":"https://ggforce.data-imaginist.com/reference/n_pages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the number of pages in a paginated facet plot — n_pages","text":"","code":"p <- ggplot(diamonds) +   geom_point(aes(carat, price), alpha = 0.1) +   facet_wrap_paginate(~ cut:clarity, ncol = 3, nrow = 3, page = 1) n_pages(p) #> [1] 5"},{"path":"https://ggforce.data-imaginist.com/reference/position_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Jitter based on scale types — position_auto","title":"Jitter based on scale types — position_auto","text":"position adjustment able select meaningful jitter data based combination positional scale types. behaves differently depending none, one, x y scales discrete. discrete jitter datapoints evenly inside disc, one discrete jitter discrete dimension follow density along dimension (like sina plot). neither discrete jittering.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/position_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jitter based on scale types — position_auto","text":"","code":"position_auto(jitter.width = 0.75, bw = \"nrd0\", scale = TRUE, seed = NA)"},{"path":"https://ggforce.data-imaginist.com/reference/position_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jitter based on scale types — position_auto","text":"jitter.width maximal width jitter bw smoothing bandwidth use case sina jittering. See bw argument stats::density scale width jittering scaled based number points group seed seed supply make jittering reproducible across layers","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/reference/position_auto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jitter based on scale types — position_auto","text":"","code":"# Continuous vs continuous: No jitter ggplot(mpg) + geom_point(aes(cty, hwy), position = 'auto')   # Continuous vs discrete: sina jitter ggplot(mpg) + geom_point(aes(cty, drv), position = 'auto')   # Discrete vs discrete: disc-jitter ggplot(mpg) + geom_point(aes(fl, drv), position = 'auto')   # Don't scale the jitter based on group size ggplot(mpg) + geom_point(aes(cty, drv), position = position_auto(scale = FALSE))  ggplot(mpg) + geom_point(aes(fl, drv), position = position_auto(scale = FALSE))"},{"path":"https://ggforce.data-imaginist.com/reference/position_jitternormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Jitter points with normally distributed random noise — position_jitternormal","title":"Jitter points with normally distributed random noise — position_jitternormal","text":"ggplot2::geom_jitter() adds random noise points using uniform distribution. many points plotted, appear rectangle. position jitters points using normal distribution instead, resulting circular clusters.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/position_jitternormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jitter points with normally distributed random noise — position_jitternormal","text":"","code":"position_jitternormal(sd_x = NULL, sd_y = NULL, seed = NA)"},{"path":"https://ggforce.data-imaginist.com/reference/position_jitternormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jitter points with normally distributed random noise — position_jitternormal","text":"sd_x, sd_y Standard deviation add along x y axes. function uses stats::rnorm() mean = 0 behind scenes. omitted, defaults 0.15. ggplot2::geom_jitter(), categorical data aligned integers, standard deviation 0.2 spread data possible see distinction categories. seed random seed make jitter reproducible. Useful need apply jitter twice, e.g., point corresponding label. random seed reset jittering. NA (default value), seed initialised random value; makes sure two subsequent calls start different seed. Use NULL use current random seed also avoid resetting (behaviour ggplot 2.2.1 earlier).","code":""},{"path":"https://ggforce.data-imaginist.com/reference/position_jitternormal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jitter points with normally distributed random noise — position_jitternormal","text":"","code":"# Example data df <- data.frame(   x = sample(1:3, 1500, TRUE),   y = sample(1:3, 1500, TRUE) )  # position_jitter results in rectangular clusters ggplot(df, aes(x = x, y = y)) +   geom_point(position = position_jitter())   # geom_jitternormal results in more circular clusters ggplot(df, aes(x = x, y = y)) +   geom_point(position = position_jitternormal())   # You can adjust the standard deviations along both axes # Tighter circles ggplot(df, aes(x = x, y = y)) +   geom_point(position = position_jitternormal(sd_x = 0.08, sd_y = 0.08))   # Oblong shapes ggplot(df, aes(x = x, y = y)) +   geom_point(position = position_jitternormal(sd_x = 0.2, sd_y = 0.08))   # Only add random noise to one dimension ggplot(df, aes(x = x, y = y)) +   geom_point(     position = position_jitternormal(sd_x = 0.15, sd_y = 0),     alpha = 0.1   )"},{"path":"https://ggforce.data-imaginist.com/reference/power_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a power transformation object — power_trans","title":"Create a power transformation object — power_trans","text":"function can used create proper trans object encapsulates power transformation (x^n).","code":""},{"path":"https://ggforce.data-imaginist.com/reference/power_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a power transformation object — power_trans","text":"","code":"power_trans(n)"},{"path":"https://ggforce.data-imaginist.com/reference/power_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a power transformation object — power_trans","text":"n degree power transformation","code":""},{"path":"https://ggforce.data-imaginist.com/reference/power_trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a power transformation object — power_trans","text":"trans object","code":""},{"path":"https://ggforce.data-imaginist.com/reference/power_trans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a power transformation object — power_trans","text":"","code":"# Power of 2 transformations trans <- power_trans(2) trans$transform(1:10) #>  [1]   1   4   9  16  25  36  49  64  81 100  # Cubic root transformation trans <- power_trans(1 / 3) trans$transform(1:10) #>  [1] 1.000000 1.259921 1.442250 1.587401 1.709976 1.817121 1.912931 2.000000 #>  [9] 2.080084 2.154435  # Use it in a plot ggplot() +   geom_line(aes(x = 1:10, y = 1:10)) +   scale_x_continuous(trans = power_trans(2),                      expand = c(0, 1))"},{"path":"https://ggforce.data-imaginist.com/reference/radial_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Create radial data in a cartesian coordinate system — radial_trans","title":"Create radial data in a cartesian coordinate system — radial_trans","text":"function creates trans object converts radial data corresponding coordinates cartesian space. trans object created specific radius angle range mapped unit circle data normalized 0-1 0-2*pi advance. exists clear mapping radial cartesian, inverse true radial representation periodic. impossible know many revolutions around unit circle point taken reading coordinates. inverse function always assume coordinates first revolution .e. map back within range .range.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/radial_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create radial data in a cartesian coordinate system — radial_trans","text":"","code":"radial_trans(r.range, a.range, offset = pi/2, pad = 0.5, clip = FALSE)"},{"path":"https://ggforce.data-imaginist.com/reference/radial_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create radial data in a cartesian coordinate system — radial_trans","text":"r.range range radius correspond 0 - 1 unit circle. .range range angles correspond 2*pi - 0. radians normally measured counterclockwise radial displays read clockwise inverse mapping offset offset angles apply. Determines start position circle. pi/2 (default) corresponds 12 o'clock. pad Adds end points angle range order separate start end point. Defaults 0.5 clip input data clipped r.range .range allowed extend beyond. Defaults FALSE (clipping)","code":""},{"path":"https://ggforce.data-imaginist.com/reference/radial_trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create radial data in a cartesian coordinate system — radial_trans","text":"trans object. transform method object takes r (radius) (angle) argument returns data.frame x y columns rows element r/. inverse method takes x y argument returns data.frame r columns rows element x/y.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/radial_trans.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create radial data in a cartesian coordinate system — radial_trans","text":"trans objects often used modify scales ggplot2, radial transformation different coordinate transformation takes two arguments. Consider trans version coord_polar use transform data prior plotting.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/radial_trans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create radial data in a cartesian coordinate system — radial_trans","text":"","code":"# Some data in radial form rad <- data.frame(r = seq(1, 10, by = 0.1), a = seq(1, 10, by = 0.1))  # Create a transformation radial <- radial_trans(c(0, 1), c(0, 5))  # Get data in x, y cart <- radial$transform(rad$r, rad$a)  # Have a look ggplot() +   geom_path(aes(x = x, y = y), data = cart, color = 'forestgreen') +   geom_path(aes(x = r, y = a), data = rad, color = 'firebrick')"},{"path":"https://ggforce.data-imaginist.com/reference/scale_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Scales for depth perception — scale_depth","title":"Scales for depth perception — scale_depth","text":"scales serve scale depth aesthetic creating stereographic plots. range specifies relative distance points paper plane relation distance eyes paper plane .e. range c(-0.5, 0.5) put highest values midways eyes image plane lowest values distance behind image plane. ensure nice viewing experience values exceed ~0.3 get hard eyes consolidate two pictures.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/scale_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scales for depth perception — scale_depth","text":"","code":"scale_depth(..., range = c(0, 0.3))  scale_depth_continuous(..., range = c(0, 0.3))  scale_depth_discrete(..., range = c(0, 0.3))"},{"path":"https://ggforce.data-imaginist.com/reference/scale_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scales for depth perception — scale_depth","text":"... arguments passed continuous_scale discrete_scale range relative range related distance eyes paper plane.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/scale_depth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Scales for depth perception — scale_depth","text":"","code":"ggplot(mtcars) +   geom_point(aes(mpg, disp, depth = cyl)) +   scale_depth(range = c(-0.1, 0.25)) +   facet_stereo() #> Warning: Ignoring unknown aesthetics: depth"},{"path":"https://ggforce.data-imaginist.com/reference/scale_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Position scales for units data — scale_unit","title":"Position scales for units data — scale_unit","text":"default scales units class. usually added automatically. override manually, use scale_*_unit.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/scale_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Position scales for units data — scale_unit","text":"","code":"scale_x_unit(...)  scale_y_unit(...)"},{"path":"https://ggforce.data-imaginist.com/reference/scale_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Position scales for units data — scale_unit","text":"... Passed units::scale_x_units() units::scale_y_units()","code":""},{"path":"https://ggforce.data-imaginist.com/reference/shapeGrob.html","id":null,"dir":"Reference","previous_headings":"","what":"The grob powering geom_shape — shapeGrob","title":"The grob powering geom_shape — shapeGrob","text":"underlying grob constructor geom_shape(). exported others use limited support","code":""},{"path":"https://ggforce.data-imaginist.com/reference/shapeGrob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The grob powering geom_shape — shapeGrob","text":"","code":"shapeGrob(   x = c(0, 0.5, 1, 0.5),   y = c(0.5, 1, 0.5, 0),   id = NULL,   id.lengths = NULL,   expand = 0,   radius = 0,   default.units = \"npc\",   name = NULL,   gp = gpar(),   vp = NULL )"},{"path":"https://ggforce.data-imaginist.com/reference/shapeGrob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The grob powering geom_shape — shapeGrob","text":"x numeric vector unit object specifying x-locations. y numeric vector unit object specifying y-locations. id numeric vector used separate locations x     y multiple polygons.  locations     id belong polygon. id.lengths numeric vector used separate locations x     y multiple polygons.  Specifies consecutive blocks     locations make separate polygons. expand expansion size expand shape , given units numeric refering default.units radius corner radius apply shape, given units numeric refering default.units default.units string indicating default units use     x, y, width, height     given numeric vectors. name character identifier. gp object class \"gpar\", typically output     call function gpar.  basically     list graphical parameter settings. vp Grid viewport object (NULL).","code":""},{"path":"https://ggforce.data-imaginist.com/reference/shapeGrob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The grob powering geom_shape — shapeGrob","text":"grob class shape , expand radius 0 regular polygon grob","code":""},{"path":"https://ggforce.data-imaginist.com/reference/stat_err.html","id":null,"dir":"Reference","previous_headings":"","what":"Intervals in vertical and horizontal directions — stat_err","title":"Intervals in vertical and horizontal directions — stat_err","text":"stat_err draws intervals points (x, y) vertical (ymin, ymax) horizontal (xmin, xmax) directions.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/stat_err.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intervals in vertical and horizontal directions — stat_err","text":"","code":"stat_err(   mapping = NULL,   data = NULL,   geom = \"segment\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://ggforce.data-imaginist.com/reference/stat_err.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intervals in vertical and horizontal directions — stat_err","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/stat_err.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Intervals in vertical and horizontal directions — stat_err","text":"stat_err() understands following aesthetics (required aesthetics bold): x xmin xmax y ymin ymax alpha color group linetype linewidth","code":""},{"path":"https://ggforce.data-imaginist.com/reference/stat_err.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Intervals in vertical and horizontal directions — stat_err","text":"","code":"library(ggplot2)  x <- 1:3 xmin <- x - 2.5 xmax <- x + 2.5 d <- data.frame(   x = x, y = x, xmin = xmin, ymin = xmin, xmax = xmax, ymax = xmax,   color = as.factor(x) ) ggplot(   d,   aes(x = x, y = y, xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, color = color) ) +   stat_err(size = 2)"},{"path":"https://ggforce.data-imaginist.com/reference/theme_no_axes.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme without axes and gridlines — theme_no_axes","title":"Theme without axes and gridlines — theme_no_axes","text":"theme simple wrapper around complete theme removes axis text, title ticks well grid lines plots little meaning.","code":""},{"path":"https://ggforce.data-imaginist.com/reference/theme_no_axes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme without axes and gridlines — theme_no_axes","text":"","code":"theme_no_axes(base.theme = theme_bw())"},{"path":"https://ggforce.data-imaginist.com/reference/theme_no_axes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme without axes and gridlines — theme_no_axes","text":"base.theme theme use base new theme. Defaults ggplot2::theme_bw().","code":""},{"path":"https://ggforce.data-imaginist.com/reference/theme_no_axes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theme without axes and gridlines — theme_no_axes","text":"modified version base.theme","code":""},{"path":"https://ggforce.data-imaginist.com/reference/theme_no_axes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme without axes and gridlines — theme_no_axes","text":"","code":"p <- ggplot() + geom_point(aes(x = wt, y = qsec), data = mtcars)  p + theme_no_axes()  p + theme_no_axes(theme_grey())"},{"path":"https://ggforce.data-imaginist.com/reference/trans_reverser.html","id":null,"dir":"Reference","previous_headings":"","what":"Reverse a transformation — trans_reverser","title":"Reverse a transformation — trans_reverser","text":"scales package export reverse_trans object allow reversing already transformed ranged - e.g. reverse exp transformation possible. trans_reverser takes trans object something coercible one creates reverse version .","code":""},{"path":"https://ggforce.data-imaginist.com/reference/trans_reverser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reverse a transformation — trans_reverser","text":"","code":"trans_reverser(trans)"},{"path":"https://ggforce.data-imaginist.com/reference/trans_reverser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reverse a transformation — trans_reverser","text":"trans trans object object can converted one using scales::.trans()","code":""},{"path":"https://ggforce.data-imaginist.com/reference/trans_reverser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reverse a transformation — trans_reverser","text":"trans object","code":""},{"path":"https://ggforce.data-imaginist.com/reference/trans_reverser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reverse a transformation — trans_reverser","text":"","code":"# Lets make a plot p <- ggplot() +   geom_line(aes(x = 1:10, y = 1:10))  # scales already have a reverse trans p + scale_x_continuous(trans = 'reverse')   # But what if you wanted to reverse an already log transformed scale? p + scale_x_continuous(trans = trans_reverser('log'))"},{"path":[]},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-050","dir":"Changelog","previous_headings":"","what":"ggforce 0.5.0","title":"ggforce 0.5.0","text":"CRAN release: 2025-06-18 Fixed bug cause reordering data geoms (#314) concaveman package longer dependency geom_mark_hull() (#308) Setting label description NA now turn label drawing mark completely still drawing mark Fix bug geom_mark_rect() mark shown panels (#307) Fixed bug geom_mark_*() geoms NA values filter aesthetic lead weird errors. NA now treated FALSE (#306) shapeGrob() now exported use packages (#303) Fix bug geom_autohistogram() prevented used continuous data (#297) facet_zoom() now throws better error used coord_flip() (#143) can now use \"inherit\", \"inherit_fill\", \"inherit_col\" styling label box connector geom_mark_*() family geoms (#240) Prepare upcoming changes ggplot2","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-042","dir":"Changelog","previous_headings":"","what":"ggforce 0.4.2","title":"ggforce 0.4.2","text":"CRAN release: 2024-02-19 Fix documentation issue reported CRAN","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-041","dir":"Changelog","previous_headings":"","what":"ggforce 0.4.1","title":"ggforce 0.4.1","text":"CRAN release: 2022-10-04 Fixed sanitizer error decent calculations used mark geoms Fixed typo bug vctrs implementations","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-040","dir":"Changelog","previous_headings":"","what":"ggforce 0.4.0","title":"ggforce 0.4.0","text":"CRAN release: 2022-09-29 Moved vctrs internally Updated error messaging use cli geom_diagonal(), geom_diagonal_wide(), geom_parallel_sets(), geom_sina() now bidirectional style ggplot2 geom_mark_*() now works correctly presence NA values x y zoom, zoom.x, zoom.y elements now uses proper registration theme elements, inheriting strip.background. Fixed bug geom_sina() groups contained less 3 points Fixed bug geom_parallel_sets() erroneously removed grouping information configurations Added jitter_y argument geom_sina() control whether y jittering performed integerish y values. facet_zoom() now works patchwork Fix bug geom_mark_ellipse() caused wrong orientation ellipses groups two. gather_set_data() now supports tidyselect. position_jitternormal() gains seed argument parallel ggplot2::position_jitter() geom_sina() now works group single unique y value facet_zoom() now works correctly transformed scales facet_wrap_paginate() now works correctly dir = 'v' facet_matrix() now supports labeller fix bug geom_parallel_sets_axes() prevented coloring axis fill fix bug stat_circle() x y aesthetics inherited global mapping facet_zoom() now works even limits set scales","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-034","dir":"Changelog","previous_headings":"","what":"ggforce 0.3.4","title":"ggforce 0.3.4","text":"CRAN release: 2022-08-18 Changed documentation comply new units package Fixed unintentional re-ordering shapes (#224) Deprecate scale_[x|y]_unit favor units::scale_[x|y]_units","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-032","dir":"Changelog","previous_headings":"","what":"ggforce 0.3.2","title":"ggforce 0.3.2","text":"CRAN release: 2020-06-23 Changes comply latest ggplot2 release Make sure ggforce pass test even concaveman available","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-031","dir":"Changelog","previous_headings":"","what":"ggforce 0.3.1","title":"ggforce 0.3.1","text":"CRAN release: 2019-08-20 Better fix gganimate compatibility (#157)","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-030","dir":"Changelog","previous_headings":"","what":"ggforce 0.3.0","title":"ggforce 0.3.0","text":"CRAN release: 2019-08-09 Added facet_matrix() order facet different data columns different rows columns grid, order make e.g. scatterplot matrices pairs plot Added geom_autopoint() position_auto() jitter points based type positional scales panel Added geom_autohistogram() geom_autodensity() facilitating distribution plots along diagonal facet_matrix() plot. Added facet_row() facet_col one-dimensional facet_wrap() possibility variable sizing. Stats now always keep old group variable (potentially something added), making work gganimate Removed Visual Guide vignette reduce compilation time. See website overview functionality compiled examples (https://ggforce.data-imaginist.com)","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-022","dir":"Changelog","previous_headings":"","what":"ggforce 0.2.2","title":"ggforce 0.2.2","text":"CRAN release: 2019-04-23 Fixed regression geom_sina() computation fail warning due tolower() masked (#134, #135).","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-021","dir":"Changelog","previous_headings":"","what":"ggforce 0.2.1","title":"ggforce 0.2.1","text":"CRAN release: 2019-03-12 Fixed bug calculation open closed b-splines, interval exceed defined region result --bounds memory error","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-020","dir":"Changelog","previous_headings":"","what":"ggforce 0.2.0","title":"ggforce 0.2.0","text":"CRAN release: 2019-03-07","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"ggforce 0.2.0","text":"linear_trans composing linear transformation using rotate, stretch, shear, reflect, translate facet_stereo added creating stereographic projections geom_voronoi_[tile|segment], geom_delaunay_[tile|segment|segment2], stat_delvor_summary added tesselation triangulation. geom_spiro added drawing spirographs Add geom_ellipse drawing regular superellipses Add geom_regon drawing regular polygons Add geom_diagonal, geom_diagonal_wide geom_parallel_sets drawing parallel sets diagrams visualizations based diagonals. Add geom_shape drawing polygons rounded corners expanded/contracted sides. geom_shape replaces geom_polygon internally. Added geom_bspline_closed draw polygons defined b-splines Add geom_mark_[rect|circle|ellipse|hull] encircle group points optionally add textual annotation ","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"ggforce 0.2.0","text":"facet_[wrap|grid]_paginate now try make panels last page size full pages (#7) facet_zoom now gains xlim ylim arguments control zoom range directly facet_zoom now gains zoom.data control data gets plotted panel Slimmed dependencies package. plyr, lazyeval dplyr removed Rewrite geom_sina match geom_violin allow dodging Add open/clamped option `geom_bspline","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ggforce 0.2.0","text":"stat_link longer replicates group column arcs links longer rename aesthetics one aesthetic present (drop = FALSE) stat_bezier0 stat_bezier2 now return data expected format Fix bug n_pages due internal changes ggplot2 Fix bug facet_zoom combination secondary y-axis space y-axis become huge Correctly detect error scales coords work facet_zoom *2 versions line geoms longer adds NA guides.","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-011","dir":"Changelog","previous_headings":"","what":"ggforce 0.1.1","title":"ggforce 0.1.1","text":"CRAN release: 2016-11-28","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"","what":"New features","title":"ggforce 0.1.1","text":"Zoom indicator styling can now specified separetely x y zoom using zoom.x zoom.y theme (inherits zoom inherits strip.background)","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"bug-fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"ggforce 0.1.1","text":"Fix bug facet_wrap_paginate threw errors using free scales (#19) Fixes bug facet_zoom y-axis incorrectly displayed zooming axes without splitting view (#23) Fixes bug facet_zoom scale expansion taken account drawing indicator area (#22) Fixes bug facet_zoom throw errors layers containing column zoomed (#21)","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"ggforce-010","dir":"Changelog","previous_headings":"","what":"ggforce 0.1.0","title":"ggforce 0.1.0","text":"CRAN release: 2016-11-22","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"major-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"ggforce 0.1.0","text":"geom_edge_bundle renamed geom_bspline lost tension argument. True edge bundle functionality moved ggraph","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"ggforce 0.1.0","text":"geom_bezier drawing quadratic cubic beziers geom_link augmented segment/path drawing geom_sina alternative geom_violin geom_beeswarm scale_[x|y]_unit using units vectors facet_[wrap|grid]_paginate split facetting multiple pages facet_zoom contextual zooming","code":""},{"path":[]},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"major-changes-0-0-1","dir":"Changelog","previous_headings":"","what":"Major changes","title":"ggforce 0.0.1","text":"First commit","code":""},{"path":"https://ggforce.data-imaginist.com/news/index.html","id":"new-features-0-0-1","dir":"Changelog","previous_headings":"","what":"New features","title":"ggforce 0.0.1","text":"geom_arc / stat_arc drawing circle segments geom_edge_bundle / stat_edge_bundle drawing edge bundles based control points geom_arc_bar /stat_arc_bar / stat_pie drawing arcs wedges fill geom_circle / stat_circle drawing circles radius based coordinate system scale power_trans creating power transformations radial_trans creating transformation radial cartesian coordinates trans_reverser reversing trans object","code":""}]
